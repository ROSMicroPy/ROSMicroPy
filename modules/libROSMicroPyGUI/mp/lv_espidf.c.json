{
    "objects": {},
    "functions": {
        "lldesc_get_required_num_constrained": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "data_size"
                },
                {
                    "type": "int",
                    "name": "max_desc_size"
                }
            ],
            "return_type": "int"
        },
        "timeout_from_offered": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "lease"
                },
                {
                    "type": "int",
                    "name": "min"
                }
            ],
            "return_type": "int"
        },
        "dhcps_router_enabled": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "offer"
                }
            ],
            "return_type": "bool"
        },
        "dhcps_dns_enabled": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "offer"
                }
            ],
            "return_type": "bool"
        },
        "esp_get_idf_version": {
            "type": "function",
            "args": [],
            "return_type": "char*"
        },
        "xPortGetCoreID": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "uxTaskPriorityGet": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "xTask"
                }
            ],
            "return_type": "int"
        },
        "SPH0645_WORKAROUND": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "i2s_num"
                }
            ],
            "return_type": "NoneType"
        },
        "get_ccount": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "ccount"
                }
            ],
            "return_type": "NoneType"
        },
        "memcpy": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "destination"
                },
                {
                    "type": "void*",
                    "name": "source"
                },
                {
                    "type": "int",
                    "name": "num"
                }
            ],
            "return_type": "void*"
        },
        "memset": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "ptr"
                },
                {
                    "type": "int",
                    "name": "value"
                },
                {
                    "type": "int",
                    "name": "num"
                }
            ],
            "return_type": "void*"
        },
        "esp_clk_slowclk_cal_get": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "esp_clk_slowclk_cal_set": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "value"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_clk_cpu_freq": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "esp_clk_apb_freq": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "esp_clk_xtal_freq": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "esp_clk_rtc_time": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "esp_clk_private_lock": {
            "type": "function",
            "args": [],
            "return_type": "NoneType"
        },
        "esp_clk_private_unlock": {
            "type": "function",
            "args": [],
            "return_type": "NoneType"
        },
        "esp_err_to_name": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "code"
                }
            ],
            "return_type": "char*"
        },
        "esp_err_to_name_r": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "code"
                },
                {
                    "type": "char*",
                    "name": "buf"
                },
                {
                    "type": "int",
                    "name": "buflen"
                }
            ],
            "return_type": "char*"
        },
        "gpio_init": {
            "type": "function",
            "args": [],
            "return_type": "NoneType"
        },
        "gpio_output_set": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "set_mask"
                },
                {
                    "type": "int",
                    "name": "clear_mask"
                },
                {
                    "type": "int",
                    "name": "enable_mask"
                },
                {
                    "type": "int",
                    "name": "disable_mask"
                }
            ],
            "return_type": "NoneType"
        },
        "gpio_output_set_high": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "set_mask"
                },
                {
                    "type": "int",
                    "name": "clear_mask"
                },
                {
                    "type": "int",
                    "name": "enable_mask"
                },
                {
                    "type": "int",
                    "name": "disable_mask"
                }
            ],
            "return_type": "NoneType"
        },
        "gpio_input_get": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "gpio_input_get_high": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "gpio_intr_handler_register": {
            "type": "function",
            "args": [
                {
                    "type": "function pointer",
                    "name": "fn"
                },
                {
                    "type": "void*",
                    "name": "arg"
                }
            ],
            "return_type": "NoneType"
        },
        "gpio_intr_pending": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "gpio_intr_pending_high": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "gpio_intr_ack": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "value"
                }
            ],
            "return_type": "NoneType"
        },
        "gpio_intr_ack_high": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "value"
                }
            ],
            "return_type": "NoneType"
        },
        "gpio_pin_wakeup_enable": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "i"
                },
                {
                    "type": "int",
                    "name": "intr_state"
                }
            ],
            "return_type": "NoneType"
        },
        "gpio_pin_wakeup_disable": {
            "type": "function",
            "args": [],
            "return_type": "NoneType"
        },
        "gpio_matrix_in": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio"
                },
                {
                    "type": "int",
                    "name": "signal_idx"
                },
                {
                    "type": "bool",
                    "name": "inv"
                }
            ],
            "return_type": "NoneType"
        },
        "gpio_matrix_out": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio"
                },
                {
                    "type": "int",
                    "name": "signal_idx"
                },
                {
                    "type": "bool",
                    "name": "out_inv"
                },
                {
                    "type": "bool",
                    "name": "oen_inv"
                }
            ],
            "return_type": "NoneType"
        },
        "gpio_pad_select_gpio": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "NoneType"
        },
        "gpio_pad_set_drv": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                },
                {
                    "type": "int",
                    "name": "drv"
                }
            ],
            "return_type": "NoneType"
        },
        "gpio_pad_pullup": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "NoneType"
        },
        "gpio_pad_pulldown": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "NoneType"
        },
        "gpio_pad_unhold": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "NoneType"
        },
        "gpio_pad_hold": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "NoneType"
        },
        "gpio_reset_pin": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "int"
        },
        "gpio_set_intr_type": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                },
                {
                    "type": "int",
                    "name": "intr_type"
                }
            ],
            "return_type": "int"
        },
        "gpio_intr_enable": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "int"
        },
        "gpio_intr_disable": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "int"
        },
        "gpio_set_level": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                },
                {
                    "type": "int",
                    "name": "level"
                }
            ],
            "return_type": "int"
        },
        "gpio_get_level": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "int"
        },
        "gpio_set_direction": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                },
                {
                    "type": "int",
                    "name": "mode"
                }
            ],
            "return_type": "int"
        },
        "gpio_set_pull_mode": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                },
                {
                    "type": "int",
                    "name": "pull"
                }
            ],
            "return_type": "int"
        },
        "gpio_wakeup_enable": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                },
                {
                    "type": "int",
                    "name": "intr_type"
                }
            ],
            "return_type": "int"
        },
        "gpio_wakeup_disable": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "int"
        },
        "gpio_isr_register": {
            "type": "function",
            "args": [
                {
                    "type": "function pointer",
                    "name": "fn"
                },
                {
                    "type": "void*",
                    "name": "arg"
                },
                {
                    "type": "int",
                    "name": "intr_alloc_flags"
                },
                {
                    "type": "void*",
                    "name": "handle"
                }
            ],
            "return_type": "int"
        },
        "gpio_pullup_en": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "int"
        },
        "gpio_pullup_dis": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "int"
        },
        "gpio_pulldown_en": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "int"
        },
        "gpio_pulldown_dis": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "int"
        },
        "gpio_install_isr_service": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "intr_alloc_flags"
                }
            ],
            "return_type": "int"
        },
        "gpio_uninstall_isr_service": {
            "type": "function",
            "args": [],
            "return_type": "NoneType"
        },
        "gpio_isr_handler_add": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                },
                {
                    "type": "function pointer",
                    "name": "isr_handler"
                },
                {
                    "type": "void*",
                    "name": "args"
                }
            ],
            "return_type": "int"
        },
        "gpio_isr_handler_remove": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "int"
        },
        "gpio_set_drive_capability": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                },
                {
                    "type": "int",
                    "name": "strength"
                }
            ],
            "return_type": "int"
        },
        "gpio_get_drive_capability": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                },
                {
                    "type": "void*",
                    "name": "strength"
                }
            ],
            "return_type": "int"
        },
        "gpio_hold_en": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "int"
        },
        "gpio_hold_dis": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "int"
        },
        "gpio_deep_sleep_hold_en": {
            "type": "function",
            "args": [],
            "return_type": "NoneType"
        },
        "gpio_deep_sleep_hold_dis": {
            "type": "function",
            "args": [],
            "return_type": "NoneType"
        },
        "gpio_iomux_in": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                },
                {
                    "type": "int",
                    "name": "signal_idx"
                }
            ],
            "return_type": "NoneType"
        },
        "gpio_iomux_out": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                },
                {
                    "type": "int",
                    "name": "func"
                },
                {
                    "type": "bool",
                    "name": "oen_inv"
                }
            ],
            "return_type": "NoneType"
        },
        "gpio_sleep_sel_en": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "int"
        },
        "gpio_sleep_sel_dis": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "int"
        },
        "gpio_sleep_set_direction": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                },
                {
                    "type": "int",
                    "name": "mode"
                }
            ],
            "return_type": "int"
        },
        "gpio_sleep_set_pull_mode": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                },
                {
                    "type": "int",
                    "name": "pull"
                }
            ],
            "return_type": "int"
        },
        "lldesc_setup_link_constrained": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "out_desc_array"
                },
                {
                    "type": "void*",
                    "name": "buffer"
                },
                {
                    "type": "int",
                    "name": "size"
                },
                {
                    "type": "int",
                    "name": "max_desc_size"
                },
                {
                    "type": "bool",
                    "name": "isrx"
                }
            ],
            "return_type": "NoneType"
        },
        "lldesc_get_received_len": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "head"
                },
                {
                    "type": "void*",
                    "name": "out_next"
                }
            ],
            "return_type": "int"
        },
        "spi_bus_initialize": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "host_id"
                },
                {
                    "type": "spi_bus_config_t",
                    "name": "bus_config"
                },
                {
                    "type": "int",
                    "name": "dma_chan"
                }
            ],
            "return_type": "int"
        },
        "spi_bus_free": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "host_id"
                }
            ],
            "return_type": "int"
        },
        "spi_bus_add_device": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "host_id"
                },
                {
                    "type": "spi_device_interface_config_t",
                    "name": "dev_config"
                },
                {
                    "type": "void*",
                    "name": "handle"
                }
            ],
            "return_type": "int"
        },
        "spi_bus_remove_device": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "handle"
                }
            ],
            "return_type": "int"
        },
        "spi_device_queue_trans": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "handle"
                },
                {
                    "type": "spi_transaction_t",
                    "name": "trans_desc"
                },
                {
                    "type": "int",
                    "name": "ticks_to_wait"
                }
            ],
            "return_type": "int"
        },
        "spi_device_get_trans_result": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "handle"
                },
                {
                    "type": "void*",
                    "name": "trans_desc"
                },
                {
                    "type": "int",
                    "name": "ticks_to_wait"
                }
            ],
            "return_type": "int"
        },
        "spi_device_transmit": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "handle"
                },
                {
                    "type": "spi_transaction_t",
                    "name": "trans_desc"
                }
            ],
            "return_type": "int"
        },
        "spi_device_polling_start": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "handle"
                },
                {
                    "type": "spi_transaction_t",
                    "name": "trans_desc"
                },
                {
                    "type": "int",
                    "name": "ticks_to_wait"
                }
            ],
            "return_type": "int"
        },
        "spi_device_polling_end": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "handle"
                },
                {
                    "type": "int",
                    "name": "ticks_to_wait"
                }
            ],
            "return_type": "int"
        },
        "spi_device_polling_transmit": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "handle"
                },
                {
                    "type": "spi_transaction_t",
                    "name": "trans_desc"
                }
            ],
            "return_type": "int"
        },
        "spi_device_acquire_bus": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "handle"
                },
                {
                    "type": "int",
                    "name": "ticks_to_wait"
                }
            ],
            "return_type": "int"
        },
        "spi_device_release_bus": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "dev"
                }
            ],
            "return_type": "NoneType"
        },
        "spi_cal_clock": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "fapb"
                },
                {
                    "type": "int",
                    "name": "hz"
                },
                {
                    "type": "int",
                    "name": "duty_cycle"
                },
                {
                    "type": "void*",
                    "name": "reg_o"
                }
            ],
            "return_type": "int"
        },
        "spi_get_actual_clock": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "fapb"
                },
                {
                    "type": "int",
                    "name": "hz"
                },
                {
                    "type": "int",
                    "name": "duty_cycle"
                }
            ],
            "return_type": "int"
        },
        "spi_get_timing": {
            "type": "function",
            "args": [
                {
                    "type": "bool",
                    "name": "gpio_is_used"
                },
                {
                    "type": "int",
                    "name": "input_delay_ns"
                },
                {
                    "type": "int",
                    "name": "eff_clk"
                },
                {
                    "type": "void*",
                    "name": "dummy_o"
                },
                {
                    "type": "void*",
                    "name": "cycles_remain_o"
                }
            ],
            "return_type": "NoneType"
        },
        "spi_get_freq_limit": {
            "type": "function",
            "args": [
                {
                    "type": "bool",
                    "name": "gpio_is_used"
                },
                {
                    "type": "int",
                    "name": "input_delay_ns"
                }
            ],
            "return_type": "int"
        },
        "spi_bus_get_max_transaction_len": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "host_id"
                },
                {
                    "type": "void*",
                    "name": "max_bytes"
                }
            ],
            "return_type": "int"
        },
        "multi_heap_aligned_alloc": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "heap"
                },
                {
                    "type": "int",
                    "name": "size"
                },
                {
                    "type": "int",
                    "name": "alignment"
                }
            ],
            "return_type": "void*"
        },
        "multi_heap_malloc": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "heap"
                },
                {
                    "type": "int",
                    "name": "size"
                }
            ],
            "return_type": "void*"
        },
        "multi_heap_aligned_free": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "heap"
                },
                {
                    "type": "void*",
                    "name": "p"
                }
            ],
            "return_type": "NoneType"
        },
        "multi_heap_free": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "heap"
                },
                {
                    "type": "void*",
                    "name": "p"
                }
            ],
            "return_type": "NoneType"
        },
        "multi_heap_realloc": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "heap"
                },
                {
                    "type": "void*",
                    "name": "p"
                },
                {
                    "type": "int",
                    "name": "size"
                }
            ],
            "return_type": "void*"
        },
        "multi_heap_get_allocated_size": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "heap"
                },
                {
                    "type": "void*",
                    "name": "p"
                }
            ],
            "return_type": "int"
        },
        "multi_heap_register": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "start"
                },
                {
                    "type": "int",
                    "name": "size"
                }
            ],
            "return_type": "void*"
        },
        "multi_heap_set_lock": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "heap"
                },
                {
                    "type": "void*",
                    "name": "p"
                }
            ],
            "return_type": "NoneType"
        },
        "multi_heap_dump": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "heap"
                }
            ],
            "return_type": "NoneType"
        },
        "multi_heap_check": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "heap"
                },
                {
                    "type": "bool",
                    "name": "print_errors"
                }
            ],
            "return_type": "bool"
        },
        "multi_heap_free_size": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "heap"
                }
            ],
            "return_type": "int"
        },
        "multi_heap_minimum_free_size": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "heap"
                }
            ],
            "return_type": "int"
        },
        "multi_heap_get_info": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "heap"
                },
                {
                    "type": "multi_heap_info_t",
                    "name": "info"
                }
            ],
            "return_type": "NoneType"
        },
        "heap_caps_register_failed_alloc_callback": {
            "type": "function",
            "args": [
                {
                    "type": "function pointer",
                    "name": "callback"
                }
            ],
            "return_type": "int"
        },
        "heap_caps_malloc": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "size"
                },
                {
                    "type": "int",
                    "name": "caps"
                }
            ],
            "return_type": "void*"
        },
        "heap_caps_free": {
            "type": "function",
            "args": [
                {
                    "type": "void*"
                }
            ],
            "return_type": "NoneType"
        },
        "heap_caps_realloc": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "ptr"
                },
                {
                    "type": "int",
                    "name": "size"
                },
                {
                    "type": "int",
                    "name": "caps"
                }
            ],
            "return_type": "void*"
        },
        "heap_caps_aligned_alloc": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "alignment"
                },
                {
                    "type": "int",
                    "name": "size"
                },
                {
                    "type": "int",
                    "name": "caps"
                }
            ],
            "return_type": "void*"
        },
        "heap_caps_aligned_free": {
            "type": "function",
            "args": [
                {
                    "type": "void*"
                }
            ],
            "return_type": "NoneType"
        },
        "heap_caps_aligned_calloc": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "alignment"
                },
                {
                    "type": "int",
                    "name": "n"
                },
                {
                    "type": "int",
                    "name": "size"
                },
                {
                    "type": "int",
                    "name": "caps"
                }
            ],
            "return_type": "void*"
        },
        "heap_caps_calloc": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "alignment"
                },
                {
                    "type": "int",
                    "name": "size"
                },
                {
                    "type": "int",
                    "name": "caps"
                }
            ],
            "return_type": "void*"
        },
        "heap_caps_get_total_size": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "caps"
                }
            ],
            "return_type": "int"
        },
        "heap_caps_get_free_size": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "caps"
                }
            ],
            "return_type": "int"
        },
        "heap_caps_get_minimum_free_size": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "caps"
                }
            ],
            "return_type": "int"
        },
        "heap_caps_get_largest_free_block": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "caps"
                }
            ],
            "return_type": "int"
        },
        "heap_caps_get_info": {
            "type": "function",
            "args": [
                {
                    "type": "multi_heap_info_t",
                    "name": "info"
                },
                {
                    "type": "int",
                    "name": "caps"
                }
            ],
            "return_type": "NoneType"
        },
        "heap_caps_print_heap_info": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "value"
                }
            ],
            "return_type": "NoneType"
        },
        "heap_caps_check_integrity_all": {
            "type": "function",
            "args": [
                {
                    "type": "bool",
                    "name": "print_errors"
                }
            ],
            "return_type": "bool"
        },
        "heap_caps_check_integrity": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "caps"
                },
                {
                    "type": "bool",
                    "name": "print_errors"
                }
            ],
            "return_type": "bool"
        },
        "heap_caps_check_integrity_addr": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "addr"
                },
                {
                    "type": "bool",
                    "name": "print_errors"
                }
            ],
            "return_type": "bool"
        },
        "heap_caps_malloc_extmem_enable": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "limit"
                }
            ],
            "return_type": "NoneType"
        },
        "heap_caps_dump": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "value"
                }
            ],
            "return_type": "NoneType"
        },
        "heap_caps_dump_all": {
            "type": "function",
            "args": [],
            "return_type": "NoneType"
        },
        "heap_caps_get_allocated_size": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "ptr"
                }
            ],
            "return_type": "int"
        },
        "esp_rom_delay_us": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "value"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_rom_install_channel_putc": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "channel"
                },
                {
                    "type": "function pointer",
                    "name": "putc"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_rom_install_uart_printf": {
            "type": "function",
            "args": [],
            "return_type": "NoneType"
        },
        "esp_rom_get_reset_reason": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "cpu_no"
                }
            ],
            "return_type": "int"
        },
        "esp_log_level_set": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "tag"
                },
                {
                    "type": "int",
                    "name": "level"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_log_level_get": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "tag"
                }
            ],
            "return_type": "int"
        },
        "esp_log_set_vprintf": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "func"
                }
            ],
            "return_type": "void*"
        },
        "esp_log_timestamp": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "esp_log_system_timestamp": {
            "type": "function",
            "args": [],
            "return_type": "char*"
        },
        "esp_log_early_timestamp": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "esp_log_buffer_hex_internal": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "tag"
                },
                {
                    "type": "void*",
                    "name": "buffer"
                },
                {
                    "type": "int",
                    "name": "buff_len"
                },
                {
                    "type": "int",
                    "name": "level"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_log_buffer_char_internal": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "tag"
                },
                {
                    "type": "void*",
                    "name": "buffer"
                },
                {
                    "type": "int",
                    "name": "buff_len"
                },
                {
                    "type": "int",
                    "name": "level"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_log_buffer_hexdump_internal": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "tag"
                },
                {
                    "type": "void*",
                    "name": "buffer"
                },
                {
                    "type": "int",
                    "name": "buff_len"
                },
                {
                    "type": "int",
                    "name": "level"
                }
            ],
            "return_type": "NoneType"
        },
        "adc_power_on": {
            "type": "function",
            "args": [],
            "return_type": "NoneType"
        },
        "adc_power_off": {
            "type": "function",
            "args": [],
            "return_type": "NoneType"
        },
        "adc_power_acquire": {
            "type": "function",
            "args": [],
            "return_type": "NoneType"
        },
        "adc_power_release": {
            "type": "function",
            "args": [],
            "return_type": "NoneType"
        },
        "adc1_pad_get_io_num": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "channel"
                },
                {
                    "type": "void*",
                    "name": "gpio_num"
                }
            ],
            "return_type": "int"
        },
        "adc1_config_channel_atten": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "channel"
                },
                {
                    "type": "int",
                    "name": "atten"
                }
            ],
            "return_type": "int"
        },
        "adc1_config_width": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "width_bit"
                }
            ],
            "return_type": "int"
        },
        "adc1_get_raw": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "channel"
                }
            ],
            "return_type": "int"
        },
        "adc_set_data_inv": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "adc_unit"
                },
                {
                    "type": "bool",
                    "name": "inv_en"
                }
            ],
            "return_type": "int"
        },
        "adc_set_clk_div": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "clk_div"
                }
            ],
            "return_type": "int"
        },
        "adc_set_data_width": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "adc_unit"
                },
                {
                    "type": "int",
                    "name": "width_bit"
                }
            ],
            "return_type": "int"
        },
        "adc1_ulp_enable": {
            "type": "function",
            "args": [],
            "return_type": "NoneType"
        },
        "adc2_pad_get_io_num": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "channel"
                },
                {
                    "type": "void*",
                    "name": "gpio_num"
                }
            ],
            "return_type": "int"
        },
        "adc2_config_channel_atten": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "channel"
                },
                {
                    "type": "int",
                    "name": "atten"
                }
            ],
            "return_type": "int"
        },
        "adc2_get_raw": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "channel"
                },
                {
                    "type": "int",
                    "name": "width_bit"
                },
                {
                    "type": "void*",
                    "name": "raw_out"
                }
            ],
            "return_type": "int"
        },
        "adc_vref_to_gpio": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "adc_unit"
                },
                {
                    "type": "int",
                    "name": "gpio"
                }
            ],
            "return_type": "int"
        },
        "adc2_vref_to_gpio": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                }
            ],
            "return_type": "int"
        },
        "adc_digi_read_bytes": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "buf"
                },
                {
                    "type": "int",
                    "name": "length_max"
                },
                {
                    "type": "void*",
                    "name": "out_length"
                },
                {
                    "type": "int",
                    "name": "timeout_ms"
                }
            ],
            "return_type": "int"
        },
        "adc_digi_start": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "adc_digi_stop": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "adc_digi_deinitialize": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "hall_sensor_read": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "adc_set_i2s_data_source": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "src"
                }
            ],
            "return_type": "int"
        },
        "adc_i2s_mode_init": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "adc_unit"
                },
                {
                    "type": "int",
                    "name": "channel"
                }
            ],
            "return_type": "int"
        },
        "i2s_set_pin": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "i2s_num"
                },
                {
                    "type": "i2s_pin_config_t",
                    "name": "pin"
                }
            ],
            "return_type": "int"
        },
        "i2s_set_pdm_rx_down_sample": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "i2s_num"
                },
                {
                    "type": "int",
                    "name": "downsample"
                }
            ],
            "return_type": "int"
        },
        "i2s_set_pdm_tx_up_sample": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "i2s_num"
                },
                {
                    "type": "i2s_pdm_tx_upsample_cfg_t",
                    "name": "upsample_cfg"
                }
            ],
            "return_type": "int"
        },
        "i2s_driver_install": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "i2s_num"
                },
                {
                    "type": "void*",
                    "name": "i2s_config"
                },
                {
                    "type": "int",
                    "name": "queue_size"
                },
                {
                    "type": "void*",
                    "name": "i2s_queue"
                }
            ],
            "return_type": "int"
        },
        "i2s_driver_uninstall": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "i2s_num"
                }
            ],
            "return_type": "int"
        },
        "i2s_write": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "i2s_num"
                },
                {
                    "type": "void*",
                    "name": "src"
                },
                {
                    "type": "int",
                    "name": "size"
                },
                {
                    "type": "void*",
                    "name": "bytes_written"
                },
                {
                    "type": "int",
                    "name": "ticks_to_wait"
                }
            ],
            "return_type": "int"
        },
        "i2s_write_expand": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "i2s_num"
                },
                {
                    "type": "void*",
                    "name": "src"
                },
                {
                    "type": "int",
                    "name": "size"
                },
                {
                    "type": "int",
                    "name": "src_bits"
                },
                {
                    "type": "int",
                    "name": "aim_bits"
                },
                {
                    "type": "void*",
                    "name": "bytes_written"
                },
                {
                    "type": "int",
                    "name": "ticks_to_wait"
                }
            ],
            "return_type": "int"
        },
        "i2s_read": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "i2s_num"
                },
                {
                    "type": "void*",
                    "name": "dest"
                },
                {
                    "type": "int",
                    "name": "size"
                },
                {
                    "type": "void*",
                    "name": "bytes_read"
                },
                {
                    "type": "int",
                    "name": "ticks_to_wait"
                }
            ],
            "return_type": "int"
        },
        "i2s_set_sample_rates": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "i2s_num"
                },
                {
                    "type": "int",
                    "name": "rate"
                }
            ],
            "return_type": "int"
        },
        "i2s_stop": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "i2s_num"
                }
            ],
            "return_type": "int"
        },
        "i2s_start": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "i2s_num"
                }
            ],
            "return_type": "int"
        },
        "i2s_zero_dma_buffer": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "i2s_num"
                }
            ],
            "return_type": "int"
        },
        "i2s_set_clk": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "i2s_num"
                },
                {
                    "type": "int",
                    "name": "rate"
                },
                {
                    "type": "int",
                    "name": "bits_cfg"
                },
                {
                    "type": "int",
                    "name": "ch"
                }
            ],
            "return_type": "int"
        },
        "i2s_get_clk": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "i2s_num"
                }
            ],
            "return_type": "float"
        },
        "i2s_set_adc_mode": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "adc_unit"
                },
                {
                    "type": "int",
                    "name": "adc_channel"
                }
            ],
            "return_type": "int"
        },
        "i2s_adc_enable": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "i2s_num"
                }
            ],
            "return_type": "int"
        },
        "i2s_adc_disable": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "i2s_num"
                }
            ],
            "return_type": "int"
        },
        "i2s_set_dac_mode": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "dac_mode"
                }
            ],
            "return_type": "int"
        },
        "pcnt_get_counter_value": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "pcnt_unit"
                },
                {
                    "type": "void*",
                    "name": "count"
                }
            ],
            "return_type": "int"
        },
        "pcnt_counter_pause": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "pcnt_unit"
                }
            ],
            "return_type": "int"
        },
        "pcnt_counter_resume": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "pcnt_unit"
                }
            ],
            "return_type": "int"
        },
        "pcnt_counter_clear": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "pcnt_unit"
                }
            ],
            "return_type": "int"
        },
        "pcnt_intr_enable": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "pcnt_unit"
                }
            ],
            "return_type": "int"
        },
        "pcnt_intr_disable": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "pcnt_unit"
                }
            ],
            "return_type": "int"
        },
        "pcnt_event_enable": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "unit"
                },
                {
                    "type": "int",
                    "name": "evt_type"
                }
            ],
            "return_type": "int"
        },
        "pcnt_event_disable": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "unit"
                },
                {
                    "type": "int",
                    "name": "evt_type"
                }
            ],
            "return_type": "int"
        },
        "pcnt_set_event_value": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "unit"
                },
                {
                    "type": "int",
                    "name": "evt_type"
                },
                {
                    "type": "int",
                    "name": "value"
                }
            ],
            "return_type": "int"
        },
        "pcnt_get_event_value": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "unit"
                },
                {
                    "type": "int",
                    "name": "evt_type"
                },
                {
                    "type": "void*",
                    "name": "value"
                }
            ],
            "return_type": "int"
        },
        "pcnt_get_event_status": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "unit"
                },
                {
                    "type": "void*",
                    "name": "status"
                }
            ],
            "return_type": "int"
        },
        "pcnt_isr_unregister": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "handle"
                }
            ],
            "return_type": "int"
        },
        "pcnt_isr_register": {
            "type": "function",
            "args": [
                {
                    "type": "function pointer",
                    "name": "fn"
                },
                {
                    "type": "void*",
                    "name": "arg"
                },
                {
                    "type": "int",
                    "name": "intr_alloc_flags"
                },
                {
                    "type": "void*",
                    "name": "handle"
                }
            ],
            "return_type": "int"
        },
        "pcnt_set_pin": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "unit"
                },
                {
                    "type": "int",
                    "name": "channel"
                },
                {
                    "type": "int",
                    "name": "pulse_io"
                },
                {
                    "type": "int",
                    "name": "ctrl_io"
                }
            ],
            "return_type": "int"
        },
        "pcnt_filter_enable": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "pcnt_unit"
                }
            ],
            "return_type": "int"
        },
        "pcnt_filter_disable": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "pcnt_unit"
                }
            ],
            "return_type": "int"
        },
        "pcnt_set_filter_value": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "unit"
                },
                {
                    "type": "int",
                    "name": "filter_val"
                }
            ],
            "return_type": "int"
        },
        "pcnt_get_filter_value": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "unit"
                },
                {
                    "type": "void*",
                    "name": "filter_val"
                }
            ],
            "return_type": "int"
        },
        "pcnt_set_mode": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "unit"
                },
                {
                    "type": "int",
                    "name": "channel"
                },
                {
                    "type": "int",
                    "name": "pos_mode"
                },
                {
                    "type": "int",
                    "name": "neg_mode"
                },
                {
                    "type": "int",
                    "name": "hctrl_mode"
                },
                {
                    "type": "int",
                    "name": "lctrl_mode"
                }
            ],
            "return_type": "int"
        },
        "pcnt_isr_handler_add": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "unit"
                },
                {
                    "type": "function pointer",
                    "name": "isr_handler"
                },
                {
                    "type": "void*",
                    "name": "args"
                }
            ],
            "return_type": "int"
        },
        "pcnt_isr_service_install": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "intr_alloc_flags"
                }
            ],
            "return_type": "int"
        },
        "pcnt_isr_service_uninstall": {
            "type": "function",
            "args": [],
            "return_type": "NoneType"
        },
        "pcnt_isr_handler_remove": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "pcnt_unit"
                }
            ],
            "return_type": "int"
        },
        "esp_eth_driver_uninstall": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "eth_handle"
                }
            ],
            "return_type": "int"
        },
        "esp_eth_start": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "eth_handle"
                }
            ],
            "return_type": "int"
        },
        "esp_eth_stop": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "eth_handle"
                }
            ],
            "return_type": "int"
        },
        "esp_eth_update_input_path": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "hdl"
                },
                {
                    "type": "function pointer",
                    "name": "stack_input"
                },
                {
                    "type": "void*",
                    "name": "priv"
                }
            ],
            "return_type": "int"
        },
        "esp_eth_transmit": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "hdl"
                },
                {
                    "type": "void*",
                    "name": "buf"
                },
                {
                    "type": "int",
                    "name": "length"
                }
            ],
            "return_type": "int"
        },
        "esp_eth_receive": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "hdl"
                },
                {
                    "type": "void*",
                    "name": "buf"
                },
                {
                    "type": "void*",
                    "name": "length"
                }
            ],
            "return_type": "int"
        },
        "esp_eth_ioctl": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "hdl"
                },
                {
                    "type": "int",
                    "name": "cmd"
                },
                {
                    "type": "void*",
                    "name": "data"
                }
            ],
            "return_type": "int"
        },
        "esp_eth_increase_reference": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "eth_handle"
                }
            ],
            "return_type": "int"
        },
        "esp_eth_decrease_reference": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "eth_handle"
                }
            ],
            "return_type": "int"
        },
        "esp_eth_new_netif_glue": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "eth_hdl"
                }
            ],
            "return_type": "void*"
        },
        "esp_eth_del_netif_glue": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "eth_netif_glue"
                }
            ],
            "return_type": "int"
        },
        "esp_eth_set_default_handlers": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "conf"
                }
            ],
            "return_type": "int"
        },
        "esp_eth_clear_default_handlers": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "conf"
                }
            ],
            "return_type": "int"
        },
        "xt_clock_freq": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "vPortCleanUpTCB": {
            "type": "function",
            "args": [
                {
                    "type": "void*"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_base_mac_addr_set": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "mac"
                }
            ],
            "return_type": "int"
        },
        "esp_base_mac_addr_get": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "mac"
                }
            ],
            "return_type": "int"
        },
        "esp_efuse_mac_get_custom": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "mac"
                }
            ],
            "return_type": "int"
        },
        "esp_efuse_mac_get_default": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "mac"
                }
            ],
            "return_type": "int"
        },
        "esp_read_mac": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "mac"
                },
                {
                    "type": "int",
                    "name": "type"
                }
            ],
            "return_type": "int"
        },
        "esp_derive_local_mac": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "local_mac"
                },
                {
                    "type": "void*",
                    "name": "universal_mac"
                }
            ],
            "return_type": "int"
        },
        "esp_random": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "esp_fill_random": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "buf"
                },
                {
                    "type": "int",
                    "name": "len"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_register_shutdown_handler": {
            "type": "function",
            "args": [
                {
                    "type": "function pointer",
                    "name": "handle"
                }
            ],
            "return_type": "int"
        },
        "esp_unregister_shutdown_handler": {
            "type": "function",
            "args": [
                {
                    "type": "function pointer",
                    "name": "handle"
                }
            ],
            "return_type": "int"
        },
        "esp_restart": {
            "type": "function",
            "args": [],
            "return_type": "NoneType"
        },
        "esp_reset_reason": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "esp_get_free_heap_size": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "esp_get_free_internal_heap_size": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "esp_get_minimum_free_heap_size": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "esp_system_abort": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "details"
                }
            ],
            "return_type": "NoneType"
        },
        "dhcp_ip_addr_restore": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "netif"
                }
            ],
            "return_type": "bool"
        },
        "dhcp_ip_addr_store": {
            "type": "function",
            "args": [
                {
                    "type": "void*"
                }
            ],
            "return_type": "NoneType"
        },
        "dhcp_ip_addr_erase": {
            "type": "function",
            "args": [
                {
                    "type": "void*"
                }
            ],
            "return_type": "NoneType"
        },
        "sntp_get_sync_interval": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "sntp_set_system_time": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "gpio_num"
                },
                {
                    "type": "int",
                    "name": "signal_idx"
                }
            ],
            "return_type": "NoneType"
        },
        "sntp_get_system_time": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "sec"
                },
                {
                    "type": "void*",
                    "name": "us"
                }
            ],
            "return_type": "NoneType"
        },
        "lwip_htons": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "x"
                }
            ],
            "return_type": "int"
        },
        "lwip_htonl": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "x"
                }
            ],
            "return_type": "int"
        },
        "lwip_itoa": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "result"
                },
                {
                    "type": "int",
                    "name": "bufsize"
                },
                {
                    "type": "int",
                    "name": "number"
                }
            ],
            "return_type": "NoneType"
        },
        "lwip_strnicmp": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "str1"
                },
                {
                    "type": "char*",
                    "name": "str2"
                },
                {
                    "type": "int",
                    "name": "len"
                }
            ],
            "return_type": "int"
        },
        "lwip_stricmp": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "str1"
                },
                {
                    "type": "char*",
                    "name": "str2"
                }
            ],
            "return_type": "int"
        },
        "lwip_strnstr": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "buffer"
                },
                {
                    "type": "char*",
                    "name": "token"
                },
                {
                    "type": "int",
                    "name": "n"
                }
            ],
            "return_type": "char*"
        },
        "ip4_addr_isbroadcast_u32": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "addr"
                },
                {
                    "type": "void*",
                    "name": "netif"
                }
            ],
            "return_type": "int"
        },
        "ip4_addr_netmask_valid": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "netmask"
                }
            ],
            "return_type": "int"
        },
        "ipaddr_addr": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "cp"
                }
            ],
            "return_type": "int"
        },
        "ip4addr_aton": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "cp"
                },
                {
                    "type": "ip4_addr_t",
                    "name": "addr"
                }
            ],
            "return_type": "int"
        },
        "ip6addr_aton": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "cp"
                },
                {
                    "type": "ip6_addr_t",
                    "name": "addr"
                }
            ],
            "return_type": "int"
        },
        "ipaddr_aton": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "cp"
                },
                {
                    "type": "ip_addr_t",
                    "name": "addr"
                }
            ],
            "return_type": "int"
        },
        "err_to_errno": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "err"
                }
            ],
            "return_type": "int"
        },
        "dhcps_start": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "netif"
                },
                {
                    "type": "ip4_addr_t",
                    "name": "ip"
                }
            ],
            "return_type": "int"
        },
        "dhcps_stop": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "netif"
                }
            ],
            "return_type": "NoneType"
        },
        "dhcps_option_info": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "op_id"
                },
                {
                    "type": "int",
                    "name": "opt_len"
                }
            ],
            "return_type": "void*"
        },
        "dhcps_set_option_info": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "op_id"
                },
                {
                    "type": "void*",
                    "name": "opt_info"
                },
                {
                    "type": "int",
                    "name": "opt_len"
                }
            ],
            "return_type": "NoneType"
        },
        "dhcp_search_ip_on_mac": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "mac"
                },
                {
                    "type": "ip4_addr_t",
                    "name": "ip"
                }
            ],
            "return_type": "bool"
        },
        "dhcps_dns_setserver": {
            "type": "function",
            "args": [
                {
                    "type": "ip_addr_t",
                    "name": "dnsserver"
                }
            ],
            "return_type": "NoneType"
        },
        "dhcps_dns_getserver": {
            "type": "function",
            "args": [],
            "return_type": "ip4_addr_t"
        },
        "dhcps_set_new_lease_cb": {
            "type": "function",
            "args": [
                {
                    "type": "function pointer",
                    "name": "cb"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_netif_get_sta_list": {
            "type": "function",
            "args": [
                {
                    "type": "wifi_sta_list_t",
                    "name": "wifi_sta_list"
                },
                {
                    "type": "esp_netif_sta_list_t",
                    "name": "netif_sta_list"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_init": {
            "type": "function",
            "args": [],
            "return_type": "NoneType"
        },
        "tcpip_adapter_if_from_esp_netif": {
            "type": "function",
            "args": [
                {
                    "type": "esp_netif_t",
                    "name": "esp_netif"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_get_ip_info": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                },
                {
                    "type": "tcpip_adapter_ip_info_t",
                    "name": "ip_info"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_get_ip6_linklocal": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                },
                {
                    "type": "ip6_addr_t",
                    "name": "if_ip6"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_get_ip6_global": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                },
                {
                    "type": "ip6_addr_t",
                    "name": "if_ip6"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_dhcpc_get_status": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                },
                {
                    "type": "void*",
                    "name": "status"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_is_netif_up": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                }
            ],
            "return_type": "bool"
        },
        "tcpip_adapter_get_netif": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                },
                {
                    "type": "void*",
                    "name": "netif"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_create_ip6_linklocal": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_set_default_eth_handlers": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "tcpip_adapter_eth_input": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "buffer"
                },
                {
                    "type": "int",
                    "name": "len"
                },
                {
                    "type": "void*",
                    "name": "eb"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_sta_input": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "buffer"
                },
                {
                    "type": "int",
                    "name": "len"
                },
                {
                    "type": "void*",
                    "name": "eb"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_ap_input": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "buffer"
                },
                {
                    "type": "int",
                    "name": "len"
                },
                {
                    "type": "void*",
                    "name": "eb"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_clear_default_wifi_handlers": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "tcpip_adapter_clear_default_eth_handlers": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "tcpip_adapter_dhcps_stop": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_dhcpc_stop": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_dhcps_start": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_dhcpc_start": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_dhcps_get_status": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                },
                {
                    "type": "void*",
                    "name": "status"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_dhcps_option": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "opt_op"
                },
                {
                    "type": "int",
                    "name": "opt_id"
                },
                {
                    "type": "void*",
                    "name": "opt_val"
                },
                {
                    "type": "int",
                    "name": "opt_len"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_dhcpc_option": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "opt_op"
                },
                {
                    "type": "int",
                    "name": "opt_id"
                },
                {
                    "type": "void*",
                    "name": "opt_val"
                },
                {
                    "type": "int",
                    "name": "opt_len"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_set_ip_info": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                },
                {
                    "type": "tcpip_adapter_ip_info_t",
                    "name": "ip_info"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_get_dns_info": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                },
                {
                    "type": "int",
                    "name": "type"
                },
                {
                    "type": "void*",
                    "name": "dns"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_set_dns_info": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                },
                {
                    "type": "int",
                    "name": "type"
                },
                {
                    "type": "void*",
                    "name": "dns"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_get_netif_index": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_get_sta_list": {
            "type": "function",
            "args": [
                {
                    "type": "wifi_sta_list_t",
                    "name": "wifi_sta_list"
                },
                {
                    "type": "void*",
                    "name": "tcpip_sta_list"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_eth_start": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "mac"
                },
                {
                    "type": "tcpip_adapter_ip_info_t",
                    "name": "ip_info"
                },
                {
                    "type": "void*",
                    "name": "args"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_sta_start": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "mac"
                },
                {
                    "type": "tcpip_adapter_ip_info_t",
                    "name": "ip_info"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_ap_start": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "mac"
                },
                {
                    "type": "tcpip_adapter_ip_info_t",
                    "name": "ip_info"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_stop": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_up": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_down": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_get_old_ip_info": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                },
                {
                    "type": "tcpip_adapter_ip_info_t",
                    "name": "ip_info"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_set_old_ip_info": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                },
                {
                    "type": "tcpip_adapter_ip_info_t",
                    "name": "ip_info"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_get_esp_if": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "dev"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_set_hostname": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                },
                {
                    "type": "char*",
                    "name": "hostname"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_get_hostname": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "tcpip_if"
                },
                {
                    "type": "char**",
                    "name": "hostname"
                }
            ],
            "return_type": "int"
        },
        "tcpip_adapter_set_default_wifi_handlers": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "esp_netif_init": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "esp_netif_deinit": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "esp_netif_action_start": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "esp_netif"
                },
                {
                    "type": "char*",
                    "name": "base"
                },
                {
                    "type": "int",
                    "name": "event_id"
                },
                {
                    "type": "void*",
                    "name": "data"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_netif_action_stop": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "esp_netif"
                },
                {
                    "type": "char*",
                    "name": "base"
                },
                {
                    "type": "int",
                    "name": "event_id"
                },
                {
                    "type": "void*",
                    "name": "data"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_netif_action_connected": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "esp_netif"
                },
                {
                    "type": "char*",
                    "name": "base"
                },
                {
                    "type": "int",
                    "name": "event_id"
                },
                {
                    "type": "void*",
                    "name": "data"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_netif_action_disconnected": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "esp_netif"
                },
                {
                    "type": "char*",
                    "name": "base"
                },
                {
                    "type": "int",
                    "name": "event_id"
                },
                {
                    "type": "void*",
                    "name": "data"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_netif_action_got_ip": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "esp_netif"
                },
                {
                    "type": "char*",
                    "name": "base"
                },
                {
                    "type": "int",
                    "name": "event_id"
                },
                {
                    "type": "void*",
                    "name": "data"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_netif_action_join_ip6_multicast_group": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "esp_netif"
                },
                {
                    "type": "char*",
                    "name": "base"
                },
                {
                    "type": "int",
                    "name": "event_id"
                },
                {
                    "type": "void*",
                    "name": "data"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_netif_action_leave_ip6_multicast_group": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "esp_netif"
                },
                {
                    "type": "char*",
                    "name": "base"
                },
                {
                    "type": "int",
                    "name": "event_id"
                },
                {
                    "type": "void*",
                    "name": "data"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_netif_action_add_ip6_address": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "esp_netif"
                },
                {
                    "type": "char*",
                    "name": "base"
                },
                {
                    "type": "int",
                    "name": "event_id"
                },
                {
                    "type": "void*",
                    "name": "data"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_netif_action_remove_ip6_address": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "esp_netif"
                },
                {
                    "type": "char*",
                    "name": "base"
                },
                {
                    "type": "int",
                    "name": "event_id"
                },
                {
                    "type": "void*",
                    "name": "data"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_ip4addr_aton": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "addr"
                }
            ],
            "return_type": "int"
        },
        "esp_netif_str_to_ip4": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "src"
                },
                {
                    "type": "esp_ip4_addr_t",
                    "name": "dst"
                }
            ],
            "return_type": "int"
        },
        "esp_netif_str_to_ip6": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "src"
                },
                {
                    "type": "esp_ip6_addr_t",
                    "name": "dst"
                }
            ],
            "return_type": "int"
        },
        "esp_netif_get_handle_from_ifkey": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "if_key"
                }
            ],
            "return_type": "esp_netif_t"
        },
        "esp_netif_get_nr_of_ifs": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "esp_netif_netstack_buf_ref": {
            "type": "function",
            "args": [
                {
                    "type": "void*"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_netif_netstack_buf_free": {
            "type": "function",
            "args": [
                {
                    "type": "void*"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_netif_tcpip_exec": {
            "type": "function",
            "args": [
                {
                    "type": "function pointer",
                    "name": "fn"
                },
                {
                    "type": "void*",
                    "name": "ctx"
                }
            ],
            "return_type": "int"
        },
        "mdns_init": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "mdns_free": {
            "type": "function",
            "args": [],
            "return_type": "NoneType"
        },
        "mdns_hostname_set": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "hostname"
                }
            ],
            "return_type": "int"
        },
        "mdns_delegate_hostname_add": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "hostname"
                },
                {
                    "type": "mdns_ip_addr_t",
                    "name": "address_list"
                }
            ],
            "return_type": "int"
        },
        "mdns_delegate_hostname_remove": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "hostname"
                }
            ],
            "return_type": "int"
        },
        "mdns_hostname_exists": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "hostname"
                }
            ],
            "return_type": "bool"
        },
        "mdns_instance_name_set": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "hostname"
                }
            ],
            "return_type": "int"
        },
        "mdns_service_add": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "instance_name"
                },
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "int",
                    "name": "port"
                },
                {
                    "type": "mp_arr_to_mdns_txt_item_t_____",
                    "name": "txt"
                },
                {
                    "type": "int",
                    "name": "num_items"
                }
            ],
            "return_type": "int"
        },
        "mdns_service_add_for_host": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "instance_name"
                },
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "char*",
                    "name": "hostname"
                },
                {
                    "type": "int",
                    "name": "port"
                },
                {
                    "type": "mp_arr_to_mdns_txt_item_t_____",
                    "name": "txt"
                },
                {
                    "type": "int",
                    "name": "num_items"
                }
            ],
            "return_type": "int"
        },
        "mdns_service_exists": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "char*",
                    "name": "hostname"
                }
            ],
            "return_type": "bool"
        },
        "mdns_service_exists_with_instance": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "instance"
                },
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "char*",
                    "name": "hostname"
                }
            ],
            "return_type": "bool"
        },
        "mdns_service_remove": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                }
            ],
            "return_type": "int"
        },
        "mdns_service_remove_for_host": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "char*",
                    "name": "hostname"
                }
            ],
            "return_type": "int"
        },
        "mdns_service_instance_name_set": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "char*",
                    "name": "hostname"
                }
            ],
            "return_type": "int"
        },
        "mdns_service_instance_name_set_for_host": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "char*",
                    "name": "hostname"
                },
                {
                    "type": "char*",
                    "name": "instance_name"
                }
            ],
            "return_type": "int"
        },
        "mdns_service_port_set": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "int",
                    "name": "port"
                }
            ],
            "return_type": "int"
        },
        "mdns_service_port_set_for_host": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "char*",
                    "name": "hostname"
                },
                {
                    "type": "int",
                    "name": "port"
                }
            ],
            "return_type": "int"
        },
        "mdns_service_txt_set": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "mp_arr_to_mdns_txt_item_t_____",
                    "name": "txt"
                },
                {
                    "type": "int",
                    "name": "num_items"
                }
            ],
            "return_type": "int"
        },
        "mdns_service_txt_set_for_host": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "char*",
                    "name": "hostname"
                },
                {
                    "type": "mp_arr_to_mdns_txt_item_t_____",
                    "name": "txt"
                },
                {
                    "type": "int",
                    "name": "num_items"
                }
            ],
            "return_type": "int"
        },
        "mdns_service_txt_item_set": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "char*",
                    "name": "hostname"
                },
                {
                    "type": "char*",
                    "name": "instance_name"
                }
            ],
            "return_type": "int"
        },
        "mdns_service_txt_item_set_with_explicit_value_len": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "char*",
                    "name": "key"
                },
                {
                    "type": "char*",
                    "name": "value"
                },
                {
                    "type": "int",
                    "name": "value_len"
                }
            ],
            "return_type": "int"
        },
        "mdns_service_txt_item_set_for_host": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "char*",
                    "name": "hostname"
                },
                {
                    "type": "char*",
                    "name": "key"
                },
                {
                    "type": "char*",
                    "name": "value"
                }
            ],
            "return_type": "int"
        },
        "mdns_service_txt_item_set_for_host_with_explicit_value_len": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "char*",
                    "name": "hostname"
                },
                {
                    "type": "char*",
                    "name": "key"
                },
                {
                    "type": "char*",
                    "name": "value"
                },
                {
                    "type": "int",
                    "name": "value_len"
                }
            ],
            "return_type": "int"
        },
        "mdns_service_txt_item_remove": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "char*",
                    "name": "hostname"
                }
            ],
            "return_type": "int"
        },
        "mdns_service_txt_item_remove_for_host": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "char*",
                    "name": "hostname"
                },
                {
                    "type": "char*",
                    "name": "instance_name"
                }
            ],
            "return_type": "int"
        },
        "mdns_service_remove_all": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "mdns_query_async_new": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "name"
                },
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "int",
                    "name": "type"
                },
                {
                    "type": "int",
                    "name": "timeout"
                },
                {
                    "type": "int",
                    "name": "max_results"
                },
                {
                    "type": "function pointer",
                    "name": "notifier"
                }
            ],
            "return_type": "mdns_search_once_t"
        },
        "mdns_query": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "name"
                },
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "int",
                    "name": "type"
                },
                {
                    "type": "int",
                    "name": "timeout"
                },
                {
                    "type": "int",
                    "name": "max_results"
                },
                {
                    "type": "void*",
                    "name": "results"
                }
            ],
            "return_type": "int"
        },
        "mdns_query_ptr": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "int",
                    "name": "timeout"
                },
                {
                    "type": "int",
                    "name": "max_results"
                },
                {
                    "type": "void*",
                    "name": "results"
                }
            ],
            "return_type": "int"
        },
        "mdns_query_srv": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "instance_name"
                },
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "int",
                    "name": "timeout"
                },
                {
                    "type": "void*",
                    "name": "result"
                }
            ],
            "return_type": "int"
        },
        "mdns_query_txt": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "instance_name"
                },
                {
                    "type": "char*",
                    "name": "service_type"
                },
                {
                    "type": "char*",
                    "name": "proto"
                },
                {
                    "type": "int",
                    "name": "timeout"
                },
                {
                    "type": "void*",
                    "name": "result"
                }
            ],
            "return_type": "int"
        },
        "mdns_query_a": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "host_name"
                },
                {
                    "type": "int",
                    "name": "timeout"
                },
                {
                    "type": "esp_ip4_addr_t",
                    "name": "addr"
                }
            ],
            "return_type": "int"
        },
        "mdns_query_aaaa": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "host_name"
                },
                {
                    "type": "int",
                    "name": "timeout"
                },
                {
                    "type": "esp_ip6_addr_t",
                    "name": "addr"
                }
            ],
            "return_type": "int"
        },
        "mdns_handle_system_event": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "ctx"
                },
                {
                    "type": "void*",
                    "name": "event"
                }
            ],
            "return_type": "int"
        },
        "http_parser_version": {
            "type": "function",
            "args": [],
            "return_type": "int"
        },
        "http_method_str": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "m"
                }
            ],
            "return_type": "char*"
        },
        "http_errno_name": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "err"
                }
            ],
            "return_type": "char*"
        },
        "http_errno_description": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "err"
                }
            ],
            "return_type": "char*"
        },
        "http_parser_url_init": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "u"
                }
            ],
            "return_type": "NoneType"
        },
        "http_parser_parse_url": {
            "type": "function",
            "args": [
                {
                    "type": "char*",
                    "name": "buf"
                },
                {
                    "type": "int",
                    "name": "buflen"
                },
                {
                    "type": "int",
                    "name": "is_connect"
                },
                {
                    "type": "void*",
                    "name": "u"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_perform": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_set_url": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "char*",
                    "name": "url"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_set_post_field": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "char*",
                    "name": "data"
                },
                {
                    "type": "int",
                    "name": "len"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_get_post_field": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "char**",
                    "name": "data"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_set_header": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "char*",
                    "name": "key"
                },
                {
                    "type": "char*",
                    "name": "value"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_get_header": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "char*",
                    "name": "key"
                },
                {
                    "type": "char**",
                    "name": "value"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_get_username": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "char**",
                    "name": "value"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_set_username": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "char*",
                    "name": "url"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_get_password": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "char**",
                    "name": "value"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_set_password": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "char*",
                    "name": "url"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_set_authtype": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "int",
                    "name": "auth_type"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_get_errno": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_set_method": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "int",
                    "name": "method"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_set_timeout_ms": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "int",
                    "name": "timeout_ms"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_delete_header": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "char*",
                    "name": "url"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_open": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "int",
                    "name": "timeout_ms"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_write": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "char*",
                    "name": "buffer"
                },
                {
                    "type": "int",
                    "name": "len"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_fetch_headers": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_is_chunked_response": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                }
            ],
            "return_type": "bool"
        },
        "esp_http_client_read": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "char*",
                    "name": "buffer"
                },
                {
                    "type": "int",
                    "name": "len"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_get_status_code": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_get_content_length": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_close": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_cleanup": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_get_transport_type": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_set_redirection": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_add_auth": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                }
            ],
            "return_type": "NoneType"
        },
        "esp_http_client_is_complete_data_received": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                }
            ],
            "return_type": "bool"
        },
        "esp_http_client_read_response": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "char*",
                    "name": "buffer"
                },
                {
                    "type": "int",
                    "name": "len"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_flush_response": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "void*",
                    "name": "len"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_get_url": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "char*",
                    "name": "url"
                },
                {
                    "type": "int",
                    "name": "len"
                }
            ],
            "return_type": "int"
        },
        "esp_http_client_get_chunk_length": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "client"
                },
                {
                    "type": "void*",
                    "name": "len"
                }
            ],
            "return_type": "int"
        },
        "task_delay_ms": {
            "type": "function",
            "args": [
                {
                    "type": "int",
                    "name": "i2s_num"
                }
            ],
            "return_type": "NoneType"
        },
        "spi_transaction_set_cb": {
            "type": "function",
            "args": [
                {
                    "type": "espidf_obj_t*",
                    "name": "pre_cb"
                },
                {
                    "type": "espidf_obj_t*",
                    "name": "post_cb"
                }
            ],
            "return_type": "void*"
        },
        "ex_spi_pre_cb_isr": {
            "type": "function",
            "args": [
                {
                    "type": "spi_transaction_t",
                    "name": "trans"
                }
            ],
            "return_type": "NoneType"
        },
        "ex_spi_post_cb_isr": {
            "type": "function",
            "args": [
                {
                    "type": "spi_transaction_t",
                    "name": "trans"
                }
            ],
            "return_type": "NoneType"
        },
        "ili9xxx_post_cb_isr": {
            "type": "function",
            "args": [
                {
                    "type": "spi_transaction_t",
                    "name": "trans"
                }
            ],
            "return_type": "NoneType"
        },
        "ili9xxx_flush": {
            "type": "function",
            "args": [
                {
                    "type": "void*",
                    "name": "disp_drv"
                },
                {
                    "type": "void*",
                    "name": "area"
                },
                {
                    "type": "void*",
                    "name": "color_p"
                }
            ],
            "return_type": "NoneType"
        }
    },
    "enums": {
        "IP6": {
            "members": {
                "UNKNOWN": {
                    "type": "enum_member"
                },
                "UNICAST": {
                    "type": "enum_member"
                },
                "MULTICAST": {
                    "type": "enum_member"
                }
            }
        },
        "IPADDR_TYPE": {
            "members": {
                "V4": {
                    "type": "enum_member"
                },
                "V6": {
                    "type": "enum_member"
                },
                "ANY": {
                    "type": "enum_member"
                }
            }
        },
        "OFFER": {
            "members": {
                "START": {
                    "type": "enum_member"
                },
                "ROUTER": {
                    "type": "enum_member"
                },
                "DNS": {
                    "type": "enum_member"
                },
                "END": {
                    "type": "enum_member"
                }
            }
        },
        "HTTP": {
            "members": {
                "DELETE": {
                    "type": "enum_member"
                },
                "GET": {
                    "type": "enum_member"
                },
                "HEAD": {
                    "type": "enum_member"
                },
                "POST": {
                    "type": "enum_member"
                },
                "PUT": {
                    "type": "enum_member"
                },
                "CONNECT": {
                    "type": "enum_member"
                },
                "OPTIONS": {
                    "type": "enum_member"
                },
                "TRACE": {
                    "type": "enum_member"
                },
                "COPY": {
                    "type": "enum_member"
                },
                "LOCK": {
                    "type": "enum_member"
                },
                "MKCOL": {
                    "type": "enum_member"
                },
                "MOVE": {
                    "type": "enum_member"
                },
                "PROPFIND": {
                    "type": "enum_member"
                },
                "PROPPATCH": {
                    "type": "enum_member"
                },
                "SEARCH": {
                    "type": "enum_member"
                },
                "UNLOCK": {
                    "type": "enum_member"
                },
                "BIND": {
                    "type": "enum_member"
                },
                "REBIND": {
                    "type": "enum_member"
                },
                "UNBIND": {
                    "type": "enum_member"
                },
                "ACL": {
                    "type": "enum_member"
                },
                "REPORT": {
                    "type": "enum_member"
                },
                "MKACTIVITY": {
                    "type": "enum_member"
                },
                "CHECKOUT": {
                    "type": "enum_member"
                },
                "MERGE": {
                    "type": "enum_member"
                },
                "MSEARCH": {
                    "type": "enum_member"
                },
                "NOTIFY": {
                    "type": "enum_member"
                },
                "SUBSCRIBE": {
                    "type": "enum_member"
                },
                "UNSUBSCRIBE": {
                    "type": "enum_member"
                },
                "PATCH": {
                    "type": "enum_member"
                },
                "PURGE": {
                    "type": "enum_member"
                },
                "MKCALENDAR": {
                    "type": "enum_member"
                },
                "LINK": {
                    "type": "enum_member"
                },
                "UNLINK": {
                    "type": "enum_member"
                },
                "REQUEST": {
                    "type": "enum_member"
                },
                "RESPONSE": {
                    "type": "enum_member"
                },
                "BOTH": {
                    "type": "enum_member"
                }
            }
        },
        "F": {
            "members": {
                "CHUNKED": {
                    "type": "enum_member"
                },
                "CONNECTION_KEEP_ALIVE": {
                    "type": "enum_member"
                },
                "CONNECTION_CLOSE": {
                    "type": "enum_member"
                },
                "CONNECTION_UPGRADE": {
                    "type": "enum_member"
                },
                "TRAILING": {
                    "type": "enum_member"
                },
                "UPGRADE": {
                    "type": "enum_member"
                },
                "SKIPBODY": {
                    "type": "enum_member"
                },
                "CONTENTLENGTH": {
                    "type": "enum_member"
                }
            }
        },
        "HPE": {
            "members": {
                "OK": {
                    "type": "enum_member"
                },
                "CB_message_begin": {
                    "type": "enum_member"
                },
                "CB_url": {
                    "type": "enum_member"
                },
                "CB_header_field": {
                    "type": "enum_member"
                },
                "CB_header_value": {
                    "type": "enum_member"
                },
                "CB_headers_complete": {
                    "type": "enum_member"
                },
                "CB_body": {
                    "type": "enum_member"
                },
                "CB_message_complete": {
                    "type": "enum_member"
                },
                "CB_status": {
                    "type": "enum_member"
                },
                "CB_chunk_header": {
                    "type": "enum_member"
                },
                "CB_chunk_complete": {
                    "type": "enum_member"
                },
                "INVALID_EOF_STATE": {
                    "type": "enum_member"
                },
                "HEADER_OVERFLOW": {
                    "type": "enum_member"
                },
                "CLOSED_CONNECTION": {
                    "type": "enum_member"
                },
                "INVALID_VERSION": {
                    "type": "enum_member"
                },
                "INVALID_STATUS": {
                    "type": "enum_member"
                },
                "INVALID_METHOD": {
                    "type": "enum_member"
                },
                "INVALID_URL": {
                    "type": "enum_member"
                },
                "INVALID_HOST": {
                    "type": "enum_member"
                },
                "INVALID_PORT": {
                    "type": "enum_member"
                },
                "INVALID_PATH": {
                    "type": "enum_member"
                },
                "INVALID_QUERY_STRING": {
                    "type": "enum_member"
                },
                "INVALID_FRAGMENT": {
                    "type": "enum_member"
                },
                "LF_EXPECTED": {
                    "type": "enum_member"
                },
                "INVALID_HEADER_TOKEN": {
                    "type": "enum_member"
                },
                "INVALID_CONTENT_LENGTH": {
                    "type": "enum_member"
                },
                "UNEXPECTED_CONTENT_LENGTH": {
                    "type": "enum_member"
                },
                "INVALID_CHUNK_SIZE": {
                    "type": "enum_member"
                },
                "INVALID_CONSTANT": {
                    "type": "enum_member"
                },
                "INVALID_INTERNAL_STATE": {
                    "type": "enum_member"
                },
                "STRICT": {
                    "type": "enum_member"
                },
                "PAUSED": {
                    "type": "enum_member"
                },
                "UNKNOWN": {
                    "type": "enum_member"
                }
            }
        },
        "UF": {
            "members": {
                "SCHEMA": {
                    "type": "enum_member"
                },
                "HOST": {
                    "type": "enum_member"
                },
                "PORT": {
                    "type": "enum_member"
                },
                "PATH": {
                    "type": "enum_member"
                },
                "QUERY": {
                    "type": "enum_member"
                },
                "FRAGMENT": {
                    "type": "enum_member"
                },
                "USERINFO": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "SPI_DEVICE": {
            "members": {
                "TXBIT_LSBFIRST": {
                    "type": "enum_member"
                },
                "RXBIT_LSBFIRST": {
                    "type": "enum_member"
                },
                "BIT_LSBFIRST": {
                    "type": "enum_member"
                },
                "_3WIRE": {
                    "type": "enum_member"
                },
                "POSITIVE_CS": {
                    "type": "enum_member"
                },
                "HALFDUPLEX": {
                    "type": "enum_member"
                },
                "NO_DUMMY": {
                    "type": "enum_member"
                },
                "CLK_AS_CS": {
                    "type": "enum_member"
                }
            }
        },
        "SPI_TRANS": {
            "members": {
                "MODE_DIO": {
                    "type": "enum_member"
                },
                "MODE_QIO": {
                    "type": "enum_member"
                },
                "MODE_DIOQIO_ADDR": {
                    "type": "enum_member"
                },
                "USE_RXDATA": {
                    "type": "enum_member"
                },
                "USE_TXDATA": {
                    "type": "enum_member"
                },
                "VARIABLE_CMD": {
                    "type": "enum_member"
                },
                "VARIABLE_ADDR": {
                    "type": "enum_member"
                }
            }
        },
        "MALLOC_CAP": {
            "members": {
                "EXEC": {
                    "type": "enum_member"
                },
                "_32BIT": {
                    "type": "enum_member"
                },
                "_8BIT": {
                    "type": "enum_member"
                },
                "DMA": {
                    "type": "enum_member"
                },
                "SPIRAM": {
                    "type": "enum_member"
                },
                "INTERNAL": {
                    "type": "enum_member"
                },
                "DEFAULT": {
                    "type": "enum_member"
                },
                "INVALID": {
                    "type": "enum_member"
                }
            }
        },
        "ESP_TASK_PRIO": {
            "members": {
                "MAX": {
                    "type": "enum_member"
                },
                "MIN": {
                    "type": "enum_member"
                }
            }
        },
        "GPIO_PORT": {
            "members": {
                "_0": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "GPIO_NUM": {
            "members": {
                "NC": {
                    "type": "enum_member"
                },
                "_0": {
                    "type": "enum_member"
                },
                "_1": {
                    "type": "enum_member"
                },
                "_2": {
                    "type": "enum_member"
                },
                "_3": {
                    "type": "enum_member"
                },
                "_4": {
                    "type": "enum_member"
                },
                "_5": {
                    "type": "enum_member"
                },
                "_6": {
                    "type": "enum_member"
                },
                "_7": {
                    "type": "enum_member"
                },
                "_8": {
                    "type": "enum_member"
                },
                "_9": {
                    "type": "enum_member"
                },
                "_10": {
                    "type": "enum_member"
                },
                "_11": {
                    "type": "enum_member"
                },
                "_12": {
                    "type": "enum_member"
                },
                "_13": {
                    "type": "enum_member"
                },
                "_14": {
                    "type": "enum_member"
                },
                "_15": {
                    "type": "enum_member"
                },
                "_16": {
                    "type": "enum_member"
                },
                "_17": {
                    "type": "enum_member"
                },
                "_18": {
                    "type": "enum_member"
                },
                "_19": {
                    "type": "enum_member"
                },
                "_20": {
                    "type": "enum_member"
                },
                "_21": {
                    "type": "enum_member"
                },
                "_22": {
                    "type": "enum_member"
                },
                "_23": {
                    "type": "enum_member"
                },
                "_25": {
                    "type": "enum_member"
                },
                "_26": {
                    "type": "enum_member"
                },
                "_27": {
                    "type": "enum_member"
                },
                "_28": {
                    "type": "enum_member"
                },
                "_29": {
                    "type": "enum_member"
                },
                "_30": {
                    "type": "enum_member"
                },
                "_31": {
                    "type": "enum_member"
                },
                "_32": {
                    "type": "enum_member"
                },
                "_33": {
                    "type": "enum_member"
                },
                "_34": {
                    "type": "enum_member"
                },
                "_35": {
                    "type": "enum_member"
                },
                "_36": {
                    "type": "enum_member"
                },
                "_37": {
                    "type": "enum_member"
                },
                "_38": {
                    "type": "enum_member"
                },
                "_39": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "GPIO_INTR": {
            "members": {
                "DISABLE": {
                    "type": "enum_member"
                },
                "POSEDGE": {
                    "type": "enum_member"
                },
                "NEGEDGE": {
                    "type": "enum_member"
                },
                "ANYEDGE": {
                    "type": "enum_member"
                },
                "LOW_LEVEL": {
                    "type": "enum_member"
                },
                "HIGH_LEVEL": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "GPIO_MODE": {
            "members": {
                "DISABLE": {
                    "type": "enum_member"
                },
                "INPUT": {
                    "type": "enum_member"
                },
                "OUTPUT": {
                    "type": "enum_member"
                },
                "OUTPUT_OD": {
                    "type": "enum_member"
                },
                "INPUT_OUTPUT_OD": {
                    "type": "enum_member"
                },
                "INPUT_OUTPUT": {
                    "type": "enum_member"
                }
            }
        },
        "GPIO_PULLUP": {
            "members": {
                "DISABLE": {
                    "type": "enum_member"
                },
                "ENABLE": {
                    "type": "enum_member"
                }
            }
        },
        "GPIO_PULLDOWN": {
            "members": {
                "DISABLE": {
                    "type": "enum_member"
                },
                "ENABLE": {
                    "type": "enum_member"
                }
            }
        },
        "GPIO": {
            "members": {
                "PULLUP_ONLY": {
                    "type": "enum_member"
                },
                "PULLDOWN_ONLY": {
                    "type": "enum_member"
                },
                "PULLUP_PULLDOWN": {
                    "type": "enum_member"
                },
                "FLOATING": {
                    "type": "enum_member"
                }
            }
        },
        "GPIO_DRIVE_CAP": {
            "members": {
                "_0": {
                    "type": "enum_member"
                },
                "_1": {
                    "type": "enum_member"
                },
                "_2": {
                    "type": "enum_member"
                },
                "DEFAULT": {
                    "type": "enum_member"
                },
                "_3": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "GPIO_PIN_INTR": {
            "members": {
                "DISABLE": {
                    "type": "enum_member"
                },
                "POSEDGE": {
                    "type": "enum_member"
                },
                "NEGEDGE": {
                    "type": "enum_member"
                },
                "ANYEDGE": {
                    "type": "enum_member"
                },
                "LOLEVEL": {
                    "type": "enum_member"
                },
                "HILEVEL": {
                    "type": "enum_member"
                }
            }
        },
        "PERIPH": {
            "members": {
                "LEDC_MODULE": {
                    "type": "enum_member"
                },
                "UART0_MODULE": {
                    "type": "enum_member"
                },
                "UART1_MODULE": {
                    "type": "enum_member"
                },
                "UART2_MODULE": {
                    "type": "enum_member"
                },
                "I2C0_MODULE": {
                    "type": "enum_member"
                },
                "I2C1_MODULE": {
                    "type": "enum_member"
                },
                "I2S0_MODULE": {
                    "type": "enum_member"
                },
                "I2S1_MODULE": {
                    "type": "enum_member"
                },
                "TIMG0_MODULE": {
                    "type": "enum_member"
                },
                "TIMG1_MODULE": {
                    "type": "enum_member"
                },
                "PWM0_MODULE": {
                    "type": "enum_member"
                },
                "PWM1_MODULE": {
                    "type": "enum_member"
                },
                "UHCI0_MODULE": {
                    "type": "enum_member"
                },
                "UHCI1_MODULE": {
                    "type": "enum_member"
                },
                "RMT_MODULE": {
                    "type": "enum_member"
                },
                "PCNT_MODULE": {
                    "type": "enum_member"
                },
                "SPI_MODULE": {
                    "type": "enum_member"
                },
                "HSPI_MODULE": {
                    "type": "enum_member"
                },
                "VSPI_MODULE": {
                    "type": "enum_member"
                },
                "SPI_DMA_MODULE": {
                    "type": "enum_member"
                },
                "SDMMC_MODULE": {
                    "type": "enum_member"
                },
                "SDIO_SLAVE_MODULE": {
                    "type": "enum_member"
                },
                "TWAI_MODULE": {
                    "type": "enum_member"
                },
                "CAN_MODULE": {
                    "type": "enum_member"
                },
                "EMAC_MODULE": {
                    "type": "enum_member"
                },
                "RNG_MODULE": {
                    "type": "enum_member"
                },
                "WIFI_MODULE": {
                    "type": "enum_member"
                },
                "BT_MODULE": {
                    "type": "enum_member"
                },
                "WIFI_BT_COMMON_MODULE": {
                    "type": "enum_member"
                },
                "BT_BASEBAND_MODULE": {
                    "type": "enum_member"
                },
                "BT_LC_MODULE": {
                    "type": "enum_member"
                },
                "AES_MODULE": {
                    "type": "enum_member"
                },
                "SHA_MODULE": {
                    "type": "enum_member"
                },
                "RSA_MODULE": {
                    "type": "enum_member"
                },
                "SARADC_MODULE": {
                    "type": "enum_member"
                },
                "MODULE_MAX": {
                    "type": "enum_member"
                }
            }
        },
        "SPI_EV": {
            "members": {
                "BUF_TX": {
                    "type": "enum_member"
                },
                "BUF_RX": {
                    "type": "enum_member"
                },
                "SEND_DMA_READY": {
                    "type": "enum_member"
                },
                "SEND": {
                    "type": "enum_member"
                },
                "RECV_DMA_READY": {
                    "type": "enum_member"
                },
                "RECV": {
                    "type": "enum_member"
                },
                "CMD9": {
                    "type": "enum_member"
                },
                "CMDA": {
                    "type": "enum_member"
                },
                "TRANS": {
                    "type": "enum_member"
                }
            }
        },
        "SPI_CMD_HD": {
            "members": {
                "WRBUF": {
                    "type": "enum_member"
                },
                "RDBUF": {
                    "type": "enum_member"
                },
                "WRDMA": {
                    "type": "enum_member"
                },
                "RDDMA": {
                    "type": "enum_member"
                },
                "SEG_END": {
                    "type": "enum_member"
                },
                "EN_QPI": {
                    "type": "enum_member"
                },
                "WR_END": {
                    "type": "enum_member"
                },
                "INT0": {
                    "type": "enum_member"
                },
                "INT1": {
                    "type": "enum_member"
                },
                "INT2": {
                    "type": "enum_member"
                }
            }
        },
        "SPI_DMA": {
            "members": {
                "DISABLED": {
                    "type": "enum_member"
                },
                "CH1": {
                    "type": "enum_member"
                },
                "CH2": {
                    "type": "enum_member"
                },
                "CH_AUTO": {
                    "type": "enum_member"
                }
            }
        },
        "RESET_REASON": {
            "members": {
                "CHIP_POWER_ON": {
                    "type": "enum_member"
                },
                "CORE_SW": {
                    "type": "enum_member"
                },
                "CORE_DEEP_SLEEP": {
                    "type": "enum_member"
                },
                "CORE_SDIO": {
                    "type": "enum_member"
                },
                "CORE_MWDT0": {
                    "type": "enum_member"
                },
                "CORE_MWDT1": {
                    "type": "enum_member"
                },
                "CORE_RTC_WDT": {
                    "type": "enum_member"
                },
                "CPU0_MWDT0": {
                    "type": "enum_member"
                },
                "CPU1_MWDT1": {
                    "type": "enum_member"
                },
                "CPU0_SW": {
                    "type": "enum_member"
                },
                "CPU1_SW": {
                    "type": "enum_member"
                },
                "CPU0_RTC_WDT": {
                    "type": "enum_member"
                },
                "CPU1_RTC_WDT": {
                    "type": "enum_member"
                },
                "CPU1_CPU0": {
                    "type": "enum_member"
                },
                "SYS_BROWN_OUT": {
                    "type": "enum_member"
                },
                "SYS_RTC_WDT": {
                    "type": "enum_member"
                }
            }
        },
        "ESP_LOG": {
            "members": {
                "NONE": {
                    "type": "enum_member"
                },
                "ERROR": {
                    "type": "enum_member"
                },
                "WARN": {
                    "type": "enum_member"
                },
                "INFO": {
                    "type": "enum_member"
                },
                "DEBUG": {
                    "type": "enum_member"
                },
                "VERBOSE": {
                    "type": "enum_member"
                }
            }
        },
        "ADC_UNIT": {
            "members": {
                "_1": {
                    "type": "enum_member"
                },
                "_2": {
                    "type": "enum_member"
                },
                "BOTH": {
                    "type": "enum_member"
                },
                "ALTER": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "ADC_CHANNEL": {
            "members": {
                "_0": {
                    "type": "enum_member"
                },
                "_1": {
                    "type": "enum_member"
                },
                "_2": {
                    "type": "enum_member"
                },
                "_3": {
                    "type": "enum_member"
                },
                "_4": {
                    "type": "enum_member"
                },
                "_5": {
                    "type": "enum_member"
                },
                "_6": {
                    "type": "enum_member"
                },
                "_7": {
                    "type": "enum_member"
                },
                "_8": {
                    "type": "enum_member"
                },
                "_9": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "ADC_ATTEN": {
            "members": {
                "DB_0": {
                    "type": "enum_member"
                },
                "DB_2_5": {
                    "type": "enum_member"
                },
                "DB_6": {
                    "type": "enum_member"
                },
                "DB_11": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "ADC_WIDTH": {
            "members": {
                "BIT_9": {
                    "type": "enum_member"
                },
                "BIT_10": {
                    "type": "enum_member"
                },
                "BIT_11": {
                    "type": "enum_member"
                },
                "BIT_12": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "ADC_CONV": {
            "members": {
                "SINGLE_UNIT_1": {
                    "type": "enum_member"
                },
                "SINGLE_UNIT_2": {
                    "type": "enum_member"
                },
                "BOTH_UNIT": {
                    "type": "enum_member"
                },
                "ALTER_UNIT": {
                    "type": "enum_member"
                },
                "UNIT_MAX": {
                    "type": "enum_member"
                }
            }
        },
        "ADC_DIGI": {
            "members": {
                "FORMAT_12BIT": {
                    "type": "enum_member"
                },
                "FORMAT_11BIT": {
                    "type": "enum_member"
                },
                "FORMAT_MAX": {
                    "type": "enum_member"
                },
                "OUTPUT_FORMAT_TYPE1": {
                    "type": "enum_member"
                },
                "OUTPUT_FORMAT_TYPE2": {
                    "type": "enum_member"
                }
            }
        },
        "ADC_I2S_DATA_SRC": {
            "members": {
                "IO_SIG": {
                    "type": "enum_member"
                },
                "ADC": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "ADC1_CHANNEL": {
            "members": {
                "_0": {
                    "type": "enum_member"
                },
                "_1": {
                    "type": "enum_member"
                },
                "_2": {
                    "type": "enum_member"
                },
                "_3": {
                    "type": "enum_member"
                },
                "_4": {
                    "type": "enum_member"
                },
                "_5": {
                    "type": "enum_member"
                },
                "_6": {
                    "type": "enum_member"
                },
                "_7": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "ADC2_CHANNEL": {
            "members": {
                "_0": {
                    "type": "enum_member"
                },
                "_1": {
                    "type": "enum_member"
                },
                "_2": {
                    "type": "enum_member"
                },
                "_3": {
                    "type": "enum_member"
                },
                "_4": {
                    "type": "enum_member"
                },
                "_5": {
                    "type": "enum_member"
                },
                "_6": {
                    "type": "enum_member"
                },
                "_7": {
                    "type": "enum_member"
                },
                "_8": {
                    "type": "enum_member"
                },
                "_9": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "ADC_ENCODE": {
            "members": {
                "_12BIT": {
                    "type": "enum_member"
                },
                "_11BIT": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "I2S_BITS_PER_SAMPLE": {
            "members": {
                "_8BIT": {
                    "type": "enum_member"
                },
                "_16BIT": {
                    "type": "enum_member"
                },
                "_24BIT": {
                    "type": "enum_member"
                },
                "_32BIT": {
                    "type": "enum_member"
                }
            }
        },
        "I2S_BITS_PER_CHAN": {
            "members": {
                "DEFAULT": {
                    "type": "enum_member"
                },
                "_8BIT": {
                    "type": "enum_member"
                },
                "_16BIT": {
                    "type": "enum_member"
                },
                "_24BIT": {
                    "type": "enum_member"
                },
                "_32BIT": {
                    "type": "enum_member"
                }
            }
        },
        "I2S_CHANNEL": {
            "members": {
                "MONO": {
                    "type": "enum_member"
                },
                "STEREO": {
                    "type": "enum_member"
                }
            }
        },
        "I2S_COMM_FORMAT": {
            "members": {
                "STAND_I2S": {
                    "type": "enum_member"
                },
                "STAND_MSB": {
                    "type": "enum_member"
                },
                "STAND_PCM_SHORT": {
                    "type": "enum_member"
                },
                "STAND_PCM_LONG": {
                    "type": "enum_member"
                },
                "STAND_MAX": {
                    "type": "enum_member"
                },
                "I2S": {
                    "type": "enum_member"
                },
                "I2S_MSB": {
                    "type": "enum_member"
                },
                "I2S_LSB": {
                    "type": "enum_member"
                },
                "PCM": {
                    "type": "enum_member"
                },
                "PCM_SHORT": {
                    "type": "enum_member"
                },
                "PCM_LONG": {
                    "type": "enum_member"
                }
            }
        },
        "I2S_CHANNEL_FMT": {
            "members": {
                "RIGHT_LEFT": {
                    "type": "enum_member"
                },
                "ALL_RIGHT": {
                    "type": "enum_member"
                },
                "ALL_LEFT": {
                    "type": "enum_member"
                },
                "ONLY_RIGHT": {
                    "type": "enum_member"
                },
                "ONLY_LEFT": {
                    "type": "enum_member"
                }
            }
        },
        "I2S_MODE": {
            "members": {
                "MASTER": {
                    "type": "enum_member"
                },
                "SLAVE": {
                    "type": "enum_member"
                },
                "TX": {
                    "type": "enum_member"
                },
                "RX": {
                    "type": "enum_member"
                },
                "DAC_BUILT_IN": {
                    "type": "enum_member"
                },
                "ADC_BUILT_IN": {
                    "type": "enum_member"
                },
                "PDM": {
                    "type": "enum_member"
                }
            }
        },
        "I2S_CLK": {
            "members": {
                "D2CLK": {
                    "type": "enum_member"
                },
                "APLL": {
                    "type": "enum_member"
                }
            }
        },
        "I2S_MCLK_MULTIPLE": {
            "members": {
                "DEFAULT": {
                    "type": "enum_member"
                },
                "_128": {
                    "type": "enum_member"
                },
                "_256": {
                    "type": "enum_member"
                },
                "_384": {
                    "type": "enum_member"
                }
            }
        },
        "I2S_DAC_CHANNEL": {
            "members": {
                "DISABLE": {
                    "type": "enum_member"
                },
                "RIGHT_EN": {
                    "type": "enum_member"
                },
                "LEFT_EN": {
                    "type": "enum_member"
                },
                "BOTH_EN": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "I2S_PDM_DSR": {
            "members": {
                "_8S": {
                    "type": "enum_member"
                },
                "_16S": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "I2S_PDM_SIG_SCALING": {
            "members": {
                "DIV_2": {
                    "type": "enum_member"
                },
                "MUL_1": {
                    "type": "enum_member"
                },
                "MUL_2": {
                    "type": "enum_member"
                },
                "MUL_4": {
                    "type": "enum_member"
                }
            }
        },
        "I2S_NUM": {
            "members": {
                "_0": {
                    "type": "enum_member"
                },
                "_1": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "I2S_EVENT": {
            "members": {
                "DMA_ERROR": {
                    "type": "enum_member"
                },
                "TX_DONE": {
                    "type": "enum_member"
                },
                "RX_DONE": {
                    "type": "enum_member"
                },
                "TX_Q_OVF": {
                    "type": "enum_member"
                },
                "RX_Q_OVF": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "PCNT_CHANNEL_LEVEL_ACTION": {
            "members": {
                "KEEP": {
                    "type": "enum_member"
                },
                "INVERSE": {
                    "type": "enum_member"
                },
                "HOLD": {
                    "type": "enum_member"
                }
            }
        },
        "PCNT_CHANNEL_EDGE_ACTION": {
            "members": {
                "HOLD": {
                    "type": "enum_member"
                },
                "INCREASE": {
                    "type": "enum_member"
                },
                "DECREASE": {
                    "type": "enum_member"
                }
            }
        },
        "PCNT_UNIT_COUNT_SIGN": {
            "members": {
                "ZERO_POS": {
                    "type": "enum_member"
                },
                "ZERO_NEG": {
                    "type": "enum_member"
                },
                "NEG": {
                    "type": "enum_member"
                },
                "POS": {
                    "type": "enum_member"
                }
            }
        },
        "PCNT_PORT": {
            "members": {
                "_0": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "PCNT_UNIT": {
            "members": {
                "_0": {
                    "type": "enum_member"
                },
                "_1": {
                    "type": "enum_member"
                },
                "_2": {
                    "type": "enum_member"
                },
                "_3": {
                    "type": "enum_member"
                },
                "_4": {
                    "type": "enum_member"
                },
                "_5": {
                    "type": "enum_member"
                },
                "_6": {
                    "type": "enum_member"
                },
                "_7": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "PCNT_CHANNEL": {
            "members": {
                "_0": {
                    "type": "enum_member"
                },
                "_1": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "PCNT_EVT": {
            "members": {
                "THRES_1": {
                    "type": "enum_member"
                },
                "THRES_0": {
                    "type": "enum_member"
                },
                "L_LIM": {
                    "type": "enum_member"
                },
                "H_LIM": {
                    "type": "enum_member"
                },
                "ZERO": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "ESP_IF": {
            "members": {
                "WIFI_STA": {
                    "type": "enum_member"
                },
                "WIFI_AP": {
                    "type": "enum_member"
                },
                "ETH": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_MODE": {
            "members": {
                "NULL": {
                    "type": "enum_member"
                },
                "STA": {
                    "type": "enum_member"
                },
                "AP": {
                    "type": "enum_member"
                },
                "APSTA": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_IF": {
            "members": {
                "STA": {
                    "type": "enum_member"
                },
                "AP": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_COUNTRY_POLICY": {
            "members": {
                "AUTO": {
                    "type": "enum_member"
                },
                "MANUAL": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_AUTH": {
            "members": {
                "OPEN": {
                    "type": "enum_member"
                },
                "WEP": {
                    "type": "enum_member"
                },
                "WPA_PSK": {
                    "type": "enum_member"
                },
                "WPA2_PSK": {
                    "type": "enum_member"
                },
                "WPA_WPA2_PSK": {
                    "type": "enum_member"
                },
                "WPA2_ENTERPRISE": {
                    "type": "enum_member"
                },
                "WPA3_PSK": {
                    "type": "enum_member"
                },
                "WPA2_WPA3_PSK": {
                    "type": "enum_member"
                },
                "WAPI_PSK": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_REASON": {
            "members": {
                "UNSPECIFIED": {
                    "type": "enum_member"
                },
                "AUTH_EXPIRE": {
                    "type": "enum_member"
                },
                "AUTH_LEAVE": {
                    "type": "enum_member"
                },
                "ASSOC_EXPIRE": {
                    "type": "enum_member"
                },
                "ASSOC_TOOMANY": {
                    "type": "enum_member"
                },
                "NOT_AUTHED": {
                    "type": "enum_member"
                },
                "NOT_ASSOCED": {
                    "type": "enum_member"
                },
                "ASSOC_LEAVE": {
                    "type": "enum_member"
                },
                "ASSOC_NOT_AUTHED": {
                    "type": "enum_member"
                },
                "DISASSOC_PWRCAP_BAD": {
                    "type": "enum_member"
                },
                "DISASSOC_SUPCHAN_BAD": {
                    "type": "enum_member"
                },
                "BSS_TRANSITION_DISASSOC": {
                    "type": "enum_member"
                },
                "IE_INVALID": {
                    "type": "enum_member"
                },
                "MIC_FAILURE": {
                    "type": "enum_member"
                },
                "_4WAY_HANDSHAKE_TIMEOUT": {
                    "type": "enum_member"
                },
                "GROUP_KEY_UPDATE_TIMEOUT": {
                    "type": "enum_member"
                },
                "IE_IN_4WAY_DIFFERS": {
                    "type": "enum_member"
                },
                "GROUP_CIPHER_INVALID": {
                    "type": "enum_member"
                },
                "PAIRWISE_CIPHER_INVALID": {
                    "type": "enum_member"
                },
                "AKMP_INVALID": {
                    "type": "enum_member"
                },
                "UNSUPP_RSN_IE_VERSION": {
                    "type": "enum_member"
                },
                "INVALID_RSN_IE_CAP": {
                    "type": "enum_member"
                },
                "_802_1X_AUTH_FAILED": {
                    "type": "enum_member"
                },
                "CIPHER_SUITE_REJECTED": {
                    "type": "enum_member"
                },
                "TDLS_PEER_UNREACHABLE": {
                    "type": "enum_member"
                },
                "TDLS_UNSPECIFIED": {
                    "type": "enum_member"
                },
                "SSP_REQUESTED_DISASSOC": {
                    "type": "enum_member"
                },
                "NO_SSP_ROAMING_AGREEMENT": {
                    "type": "enum_member"
                },
                "BAD_CIPHER_OR_AKM": {
                    "type": "enum_member"
                },
                "NOT_AUTHORIZED_THIS_LOCATION": {
                    "type": "enum_member"
                },
                "SERVICE_CHANGE_PERCLUDES_TS": {
                    "type": "enum_member"
                },
                "UNSPECIFIED_QOS": {
                    "type": "enum_member"
                },
                "NOT_ENOUGH_BANDWIDTH": {
                    "type": "enum_member"
                },
                "MISSING_ACKS": {
                    "type": "enum_member"
                },
                "EXCEEDED_TXOP": {
                    "type": "enum_member"
                },
                "STA_LEAVING": {
                    "type": "enum_member"
                },
                "END_BA": {
                    "type": "enum_member"
                },
                "UNKNOWN_BA": {
                    "type": "enum_member"
                },
                "TIMEOUT": {
                    "type": "enum_member"
                },
                "PEER_INITIATED": {
                    "type": "enum_member"
                },
                "AP_INITIATED": {
                    "type": "enum_member"
                },
                "INVALID_FT_ACTION_FRAME_COUNT": {
                    "type": "enum_member"
                },
                "INVALID_PMKID": {
                    "type": "enum_member"
                },
                "INVALID_MDE": {
                    "type": "enum_member"
                },
                "INVALID_FTE": {
                    "type": "enum_member"
                },
                "TRANSMISSION_LINK_ESTABLISH_FAILED": {
                    "type": "enum_member"
                },
                "ALTERATIVE_CHANNEL_OCCUPIED": {
                    "type": "enum_member"
                },
                "BEACON_TIMEOUT": {
                    "type": "enum_member"
                },
                "NO_AP_FOUND": {
                    "type": "enum_member"
                },
                "AUTH_FAIL": {
                    "type": "enum_member"
                },
                "ASSOC_FAIL": {
                    "type": "enum_member"
                },
                "HANDSHAKE_TIMEOUT": {
                    "type": "enum_member"
                },
                "CONNECTION_FAIL": {
                    "type": "enum_member"
                },
                "AP_TSF_RESET": {
                    "type": "enum_member"
                },
                "ROAMING": {
                    "type": "enum_member"
                },
                "ASSOC_COMEBACK_TIME_TOO_LONG": {
                    "type": "enum_member"
                },
                "SA_QUERY_TIMEOUT": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_SECOND_CHAN": {
            "members": {
                "NONE": {
                    "type": "enum_member"
                },
                "ABOVE": {
                    "type": "enum_member"
                },
                "BELOW": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_SCAN_TYPE": {
            "members": {
                "ACTIVE": {
                    "type": "enum_member"
                },
                "PASSIVE": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_CIPHER_TYPE": {
            "members": {
                "NONE": {
                    "type": "enum_member"
                },
                "WEP40": {
                    "type": "enum_member"
                },
                "WEP104": {
                    "type": "enum_member"
                },
                "TKIP": {
                    "type": "enum_member"
                },
                "CCMP": {
                    "type": "enum_member"
                },
                "TKIP_CCMP": {
                    "type": "enum_member"
                },
                "AES_CMAC128": {
                    "type": "enum_member"
                },
                "SMS4": {
                    "type": "enum_member"
                },
                "GCMP": {
                    "type": "enum_member"
                },
                "GCMP256": {
                    "type": "enum_member"
                },
                "AES_GMAC128": {
                    "type": "enum_member"
                },
                "AES_GMAC256": {
                    "type": "enum_member"
                },
                "UNKNOWN": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_ANT": {
            "members": {
                "ANT0": {
                    "type": "enum_member"
                },
                "ANT1": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI": {
            "members": {
                "FAST_SCAN": {
                    "type": "enum_member"
                },
                "ALL_CHANNEL_SCAN": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_CONNECT_AP_BY": {
            "members": {
                "SIGNAL": {
                    "type": "enum_member"
                },
                "SECURITY": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_PS": {
            "members": {
                "NONE": {
                    "type": "enum_member"
                },
                "MIN_MODEM": {
                    "type": "enum_member"
                },
                "MAX_MODEM": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_BW": {
            "members": {
                "HT20": {
                    "type": "enum_member"
                },
                "HT40": {
                    "type": "enum_member"
                }
            }
        },
        "WPA3_SAE_PWE": {
            "members": {
                "UNSPECIFIED": {
                    "type": "enum_member"
                },
                "HUNT_AND_PECK": {
                    "type": "enum_member"
                },
                "HASH_TO_ELEMENT": {
                    "type": "enum_member"
                },
                "BOTH": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_STORAGE": {
            "members": {
                "FLASH": {
                    "type": "enum_member"
                },
                "RAM": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_VND_IE_TYPE": {
            "members": {
                "BEACON": {
                    "type": "enum_member"
                },
                "PROBE_REQ": {
                    "type": "enum_member"
                },
                "PROBE_RESP": {
                    "type": "enum_member"
                },
                "ASSOC_REQ": {
                    "type": "enum_member"
                },
                "ASSOC_RESP": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_VND_IE_ID": {
            "members": {
                "_0": {
                    "type": "enum_member"
                },
                "_1": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_PHY_MODE": {
            "members": {
                "LR": {
                    "type": "enum_member"
                },
                "_11B": {
                    "type": "enum_member"
                },
                "_11G": {
                    "type": "enum_member"
                },
                "HT20": {
                    "type": "enum_member"
                },
                "HT40": {
                    "type": "enum_member"
                },
                "HE20": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_PKT": {
            "members": {
                "MGMT": {
                    "type": "enum_member"
                },
                "CTRL": {
                    "type": "enum_member"
                },
                "DATA": {
                    "type": "enum_member"
                },
                "MISC": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_ANT_MODE": {
            "members": {
                "ANT0": {
                    "type": "enum_member"
                },
                "ANT1": {
                    "type": "enum_member"
                },
                "AUTO": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_PHY_RATE": {
            "members": {
                "_1M_L": {
                    "type": "enum_member"
                },
                "_2M_L": {
                    "type": "enum_member"
                },
                "_5M_L": {
                    "type": "enum_member"
                },
                "_11M_L": {
                    "type": "enum_member"
                },
                "_2M_S": {
                    "type": "enum_member"
                },
                "_5M_S": {
                    "type": "enum_member"
                },
                "_11M_S": {
                    "type": "enum_member"
                },
                "_48M": {
                    "type": "enum_member"
                },
                "_24M": {
                    "type": "enum_member"
                },
                "_12M": {
                    "type": "enum_member"
                },
                "_6M": {
                    "type": "enum_member"
                },
                "_54M": {
                    "type": "enum_member"
                },
                "_36M": {
                    "type": "enum_member"
                },
                "_18M": {
                    "type": "enum_member"
                },
                "_9M": {
                    "type": "enum_member"
                },
                "MCS0_LGI": {
                    "type": "enum_member"
                },
                "MCS1_LGI": {
                    "type": "enum_member"
                },
                "MCS2_LGI": {
                    "type": "enum_member"
                },
                "MCS3_LGI": {
                    "type": "enum_member"
                },
                "MCS4_LGI": {
                    "type": "enum_member"
                },
                "MCS5_LGI": {
                    "type": "enum_member"
                },
                "MCS6_LGI": {
                    "type": "enum_member"
                },
                "MCS7_LGI": {
                    "type": "enum_member"
                },
                "MCS0_SGI": {
                    "type": "enum_member"
                },
                "MCS1_SGI": {
                    "type": "enum_member"
                },
                "MCS2_SGI": {
                    "type": "enum_member"
                },
                "MCS3_SGI": {
                    "type": "enum_member"
                },
                "MCS4_SGI": {
                    "type": "enum_member"
                },
                "MCS5_SGI": {
                    "type": "enum_member"
                },
                "MCS6_SGI": {
                    "type": "enum_member"
                },
                "MCS7_SGI": {
                    "type": "enum_member"
                },
                "LORA_250K": {
                    "type": "enum_member"
                },
                "LORA_500K": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "WIFI_EVENT": {
            "members": {
                "WIFI_READY": {
                    "type": "enum_member"
                },
                "SCAN_DONE": {
                    "type": "enum_member"
                },
                "STA_START": {
                    "type": "enum_member"
                },
                "STA_STOP": {
                    "type": "enum_member"
                },
                "STA_CONNECTED": {
                    "type": "enum_member"
                },
                "STA_DISCONNECTED": {
                    "type": "enum_member"
                },
                "STA_AUTHMODE_CHANGE": {
                    "type": "enum_member"
                },
                "STA_WPS_ER_SUCCESS": {
                    "type": "enum_member"
                },
                "STA_WPS_ER_FAILED": {
                    "type": "enum_member"
                },
                "STA_WPS_ER_TIMEOUT": {
                    "type": "enum_member"
                },
                "STA_WPS_ER_PIN": {
                    "type": "enum_member"
                },
                "STA_WPS_ER_PBC_OVERLAP": {
                    "type": "enum_member"
                },
                "AP_START": {
                    "type": "enum_member"
                },
                "AP_STOP": {
                    "type": "enum_member"
                },
                "AP_STACONNECTED": {
                    "type": "enum_member"
                },
                "AP_STADISCONNECTED": {
                    "type": "enum_member"
                },
                "AP_PROBEREQRECVED": {
                    "type": "enum_member"
                },
                "FTM_REPORT": {
                    "type": "enum_member"
                },
                "STA_BSS_RSSI_LOW": {
                    "type": "enum_member"
                },
                "ACTION_TX_STATUS": {
                    "type": "enum_member"
                },
                "ROC_DONE": {
                    "type": "enum_member"
                },
                "STA_BEACON_TIMEOUT": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "WPS_FAIL_REASON": {
            "members": {
                "NORMAL": {
                    "type": "enum_member"
                },
                "RECV_M2D": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "FTM_STATUS": {
            "members": {
                "SUCCESS": {
                    "type": "enum_member"
                },
                "UNSUPPORTED": {
                    "type": "enum_member"
                },
                "CONF_REJECTED": {
                    "type": "enum_member"
                },
                "NO_RESPONSE": {
                    "type": "enum_member"
                },
                "FAIL": {
                    "type": "enum_member"
                }
            }
        },
        "ESP_IP6_ADDR_IS": {
            "members": {
                "UNKNOWN": {
                    "type": "enum_member"
                },
                "GLOBAL": {
                    "type": "enum_member"
                },
                "LINK_LOCAL": {
                    "type": "enum_member"
                },
                "SITE_LOCAL": {
                    "type": "enum_member"
                },
                "UNIQUE_LOCAL": {
                    "type": "enum_member"
                },
                "IPV4_MAPPED_IPV6": {
                    "type": "enum_member"
                }
            }
        },
        "ESP_NETIF_DNS": {
            "members": {
                "MAIN": {
                    "type": "enum_member"
                },
                "BACKUP": {
                    "type": "enum_member"
                },
                "FALLBACK": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "ESP_NETIF_DHCP": {
            "members": {
                "INIT": {
                    "type": "enum_member"
                },
                "STARTED": {
                    "type": "enum_member"
                },
                "STOPPED": {
                    "type": "enum_member"
                },
                "STATUS_MAX": {
                    "type": "enum_member"
                }
            }
        },
        "ESP_NETIF_OP": {
            "members": {
                "START": {
                    "type": "enum_member"
                },
                "SET": {
                    "type": "enum_member"
                },
                "GET": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "ESP_NETIF": {
            "members": {
                "SUBNET_MASK": {
                    "type": "enum_member"
                },
                "DOMAIN_NAME_SERVER": {
                    "type": "enum_member"
                },
                "ROUTER_SOLICITATION_ADDRESS": {
                    "type": "enum_member"
                },
                "REQUESTED_IP_ADDRESS": {
                    "type": "enum_member"
                },
                "IP_ADDRESS_LEASE_TIME": {
                    "type": "enum_member"
                },
                "IP_REQUEST_RETRY_TIME": {
                    "type": "enum_member"
                },
                "VENDOR_CLASS_IDENTIFIER": {
                    "type": "enum_member"
                },
                "VENDOR_SPECIFIC_INFO": {
                    "type": "enum_member"
                },
                "DHCP_CLIENT": {
                    "type": "enum_member"
                },
                "DHCP_SERVER": {
                    "type": "enum_member"
                },
                "FLAG_AUTOUP": {
                    "type": "enum_member"
                },
                "FLAG_GARP": {
                    "type": "enum_member"
                },
                "FLAG_EVENT_IP_MODIFIED": {
                    "type": "enum_member"
                },
                "FLAG_IS_PPP": {
                    "type": "enum_member"
                },
                "FLAG_IS_SLIP": {
                    "type": "enum_member"
                },
                "FLAG_MLDV6_REPORT": {
                    "type": "enum_member"
                }
            }
        },
        "IP_EVENT": {
            "members": {
                "STA_GOT_IP": {
                    "type": "enum_member"
                },
                "STA_LOST_IP": {
                    "type": "enum_member"
                },
                "AP_STAIPASSIGNED": {
                    "type": "enum_member"
                },
                "GOT_IP6": {
                    "type": "enum_member"
                },
                "ETH_GOT_IP": {
                    "type": "enum_member"
                },
                "ETH_LOST_IP": {
                    "type": "enum_member"
                },
                "PPP_GOT_IP": {
                    "type": "enum_member"
                },
                "PPP_LOST_IP": {
                    "type": "enum_member"
                }
            }
        },
        "ESP_NETIF_IP_EVENT": {
            "members": {
                "GOT_IP": {
                    "type": "enum_member"
                },
                "LOST_IP": {
                    "type": "enum_member"
                }
            }
        },
        "EMAC_DATA_INTERFACE": {
            "members": {
                "RMII": {
                    "type": "enum_member"
                },
                "MII": {
                    "type": "enum_member"
                }
            }
        },
        "ETH_LINK": {
            "members": {
                "UP": {
                    "type": "enum_member"
                },
                "DOWN": {
                    "type": "enum_member"
                }
            }
        },
        "ETH_SPEED": {
            "members": {
                "_10M": {
                    "type": "enum_member"
                },
                "_100M": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "ETH_DUPLEX": {
            "members": {
                "HALF": {
                    "type": "enum_member"
                },
                "FULL": {
                    "type": "enum_member"
                }
            }
        },
        "ETH_CHECKSUM": {
            "members": {
                "SW": {
                    "type": "enum_member"
                },
                "HW": {
                    "type": "enum_member"
                }
            }
        },
        "ETH_STATE": {
            "members": {
                "LLINIT": {
                    "type": "enum_member"
                },
                "DEINIT": {
                    "type": "enum_member"
                },
                "LINK": {
                    "type": "enum_member"
                },
                "SPEED": {
                    "type": "enum_member"
                },
                "DUPLEX": {
                    "type": "enum_member"
                },
                "PAUSE": {
                    "type": "enum_member"
                }
            }
        },
        "ETH_CMD": {
            "members": {
                "G_MAC_ADDR": {
                    "type": "enum_member"
                },
                "S_MAC_ADDR": {
                    "type": "enum_member"
                },
                "G_PHY_ADDR": {
                    "type": "enum_member"
                },
                "S_PHY_ADDR": {
                    "type": "enum_member"
                },
                "G_SPEED": {
                    "type": "enum_member"
                },
                "S_PROMISCUOUS": {
                    "type": "enum_member"
                },
                "S_FLOW_CTRL": {
                    "type": "enum_member"
                },
                "G_DUPLEX_MODE": {
                    "type": "enum_member"
                },
                "S_PHY_LOOPBACK": {
                    "type": "enum_member"
                }
            }
        },
        "ETHERNET_EVENT": {
            "members": {
                "START": {
                    "type": "enum_member"
                },
                "STOP": {
                    "type": "enum_member"
                },
                "CONNECTED": {
                    "type": "enum_member"
                },
                "DISCONNECTED": {
                    "type": "enum_member"
                }
            }
        },
        "EMAC_CLK": {
            "members": {
                "DEFAULT": {
                    "type": "enum_member"
                },
                "EXT_IN": {
                    "type": "enum_member"
                },
                "OUT": {
                    "type": "enum_member"
                }
            }
        },
        "EMAC": {
            "members": {
                "CLK_IN_GPIO": {
                    "type": "enum_member"
                },
                "APPL_CLK_OUT_GPIO": {
                    "type": "enum_member"
                },
                "CLK_OUT_GPIO": {
                    "type": "enum_member"
                },
                "CLK_OUT_180_GPIO": {
                    "type": "enum_member"
                }
            }
        },
        "ESP_MAC": {
            "members": {
                "WIFI_STA": {
                    "type": "enum_member"
                },
                "WIFI_SOFTAP": {
                    "type": "enum_member"
                },
                "BT": {
                    "type": "enum_member"
                },
                "ETH": {
                    "type": "enum_member"
                },
                "IEEE802154": {
                    "type": "enum_member"
                }
            }
        },
        "CHIP": {
            "members": {
                "ESP32": {
                    "type": "enum_member"
                },
                "ESP32S2": {
                    "type": "enum_member"
                },
                "ESP32S3": {
                    "type": "enum_member"
                },
                "ESP32C3": {
                    "type": "enum_member"
                },
                "ESP32H2": {
                    "type": "enum_member"
                }
            }
        },
        "ESP_RST": {
            "members": {
                "UNKNOWN": {
                    "type": "enum_member"
                },
                "POWERON": {
                    "type": "enum_member"
                },
                "EXT": {
                    "type": "enum_member"
                },
                "SW": {
                    "type": "enum_member"
                },
                "PANIC": {
                    "type": "enum_member"
                },
                "INT_WDT": {
                    "type": "enum_member"
                },
                "TASK_WDT": {
                    "type": "enum_member"
                },
                "WDT": {
                    "type": "enum_member"
                },
                "DEEPSLEEP": {
                    "type": "enum_member"
                },
                "BROWNOUT": {
                    "type": "enum_member"
                },
                "SDIO": {
                    "type": "enum_member"
                }
            }
        },
        "ERR": {
            "members": {
                "OK": {
                    "type": "enum_member"
                },
                "MEM": {
                    "type": "enum_member"
                },
                "BUF": {
                    "type": "enum_member"
                },
                "TIMEOUT": {
                    "type": "enum_member"
                },
                "RTE": {
                    "type": "enum_member"
                },
                "INPROGRESS": {
                    "type": "enum_member"
                },
                "VAL": {
                    "type": "enum_member"
                },
                "WOULDBLOCK": {
                    "type": "enum_member"
                },
                "USE": {
                    "type": "enum_member"
                },
                "ALREADY": {
                    "type": "enum_member"
                },
                "ISCONN": {
                    "type": "enum_member"
                },
                "CONN": {
                    "type": "enum_member"
                },
                "IF": {
                    "type": "enum_member"
                },
                "ABRT": {
                    "type": "enum_member"
                },
                "RST": {
                    "type": "enum_member"
                },
                "CLSD": {
                    "type": "enum_member"
                },
                "ARG": {
                    "type": "enum_member"
                }
            }
        },
        "TCPIP_ADAPTER_IF": {
            "members": {
                "STA": {
                    "type": "enum_member"
                },
                "AP": {
                    "type": "enum_member"
                },
                "ETH": {
                    "type": "enum_member"
                },
                "TEST": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "MDNS_IP_PROTOCOL": {
            "members": {
                "V4": {
                    "type": "enum_member"
                },
                "V6": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "MDNS_IF": {
            "members": {
                "STA": {
                    "type": "enum_member"
                },
                "AP": {
                    "type": "enum_member"
                },
                "ETH": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "HTTP_EVENT": {
            "members": {
                "ERROR": {
                    "type": "enum_member"
                },
                "ON_CONNECTED": {
                    "type": "enum_member"
                },
                "HEADERS_SENT": {
                    "type": "enum_member"
                },
                "HEADER_SENT": {
                    "type": "enum_member"
                },
                "ON_HEADER": {
                    "type": "enum_member"
                },
                "ON_DATA": {
                    "type": "enum_member"
                },
                "ON_FINISH": {
                    "type": "enum_member"
                },
                "DISCONNECTED": {
                    "type": "enum_member"
                }
            }
        },
        "HTTP_TRANSPORT": {
            "members": {
                "UNKNOWN": {
                    "type": "enum_member"
                },
                "OVER_TCP": {
                    "type": "enum_member"
                },
                "OVER_SSL": {
                    "type": "enum_member"
                }
            }
        },
        "HTTP_METHOD": {
            "members": {
                "GET": {
                    "type": "enum_member"
                },
                "POST": {
                    "type": "enum_member"
                },
                "PUT": {
                    "type": "enum_member"
                },
                "PATCH": {
                    "type": "enum_member"
                },
                "DELETE": {
                    "type": "enum_member"
                },
                "HEAD": {
                    "type": "enum_member"
                },
                "NOTIFY": {
                    "type": "enum_member"
                },
                "SUBSCRIBE": {
                    "type": "enum_member"
                },
                "UNSUBSCRIBE": {
                    "type": "enum_member"
                },
                "OPTIONS": {
                    "type": "enum_member"
                },
                "COPY": {
                    "type": "enum_member"
                },
                "MOVE": {
                    "type": "enum_member"
                },
                "LOCK": {
                    "type": "enum_member"
                },
                "UNLOCK": {
                    "type": "enum_member"
                },
                "PROPFIND": {
                    "type": "enum_member"
                },
                "PROPPATCH": {
                    "type": "enum_member"
                },
                "MKCOL": {
                    "type": "enum_member"
                },
                "MAX": {
                    "type": "enum_member"
                }
            }
        },
        "HTTP_AUTH_TYPE": {
            "members": {
                "NONE": {
                    "type": "enum_member"
                },
                "BASIC": {
                    "type": "enum_member"
                },
                "DIGEST": {
                    "type": "enum_member"
                }
            }
        },
        "HttpStatus": {
            "members": {
                "Ok": {
                    "type": "enum_member"
                },
                "MultipleChoices": {
                    "type": "enum_member"
                },
                "MovedPermanently": {
                    "type": "enum_member"
                },
                "Found": {
                    "type": "enum_member"
                },
                "SeeOther": {
                    "type": "enum_member"
                },
                "TemporaryRedirect": {
                    "type": "enum_member"
                },
                "PermanentRedirect": {
                    "type": "enum_member"
                },
                "BadRequest": {
                    "type": "enum_member"
                },
                "Unauthorized": {
                    "type": "enum_member"
                },
                "Forbidden": {
                    "type": "enum_member"
                },
                "NotFound": {
                    "type": "enum_member"
                },
                "InternalError": {
                    "type": "enum_member"
                }
            }
        },
        "SH2LIB_ERR": {
            "members": {
                "INVALID_ARGUMENT": {
                    "type": "enum_member"
                },
                "BUFFER_ERROR": {
                    "type": "enum_member"
                },
                "UNSUPPORTED_VERSION": {
                    "type": "enum_member"
                },
                "WOULDBLOCK": {
                    "type": "enum_member"
                },
                "PROTO": {
                    "type": "enum_member"
                },
                "INVALID_FRAME": {
                    "type": "enum_member"
                },
                "EOF": {
                    "type": "enum_member"
                },
                "DEFERRED": {
                    "type": "enum_member"
                },
                "STREAM_ID_NOT_AVAILABLE": {
                    "type": "enum_member"
                },
                "STREAM_CLOSED": {
                    "type": "enum_member"
                },
                "STREAM_CLOSING": {
                    "type": "enum_member"
                },
                "STREAM_SHUT_WR": {
                    "type": "enum_member"
                },
                "INVALID_STREAM_ID": {
                    "type": "enum_member"
                },
                "INVALID_STREAM_STATE": {
                    "type": "enum_member"
                },
                "DEFERRED_DATA_EXIST": {
                    "type": "enum_member"
                },
                "START_STREAM_NOT_ALLOWED": {
                    "type": "enum_member"
                },
                "GOAWAY_ALREADY_SENT": {
                    "type": "enum_member"
                },
                "INVALID_HEADER_BLOCK": {
                    "type": "enum_member"
                },
                "INVALID_STATE": {
                    "type": "enum_member"
                },
                "TEMPORAL_CALLBACK_FAILURE": {
                    "type": "enum_member"
                },
                "FRAME_SIZE_ERROR": {
                    "type": "enum_member"
                },
                "HEADER_COMP": {
                    "type": "enum_member"
                },
                "FLOW_CONTROL": {
                    "type": "enum_member"
                },
                "INSUFF_BUFSIZE": {
                    "type": "enum_member"
                },
                "PAUSE": {
                    "type": "enum_member"
                },
                "TOO_MANY_INFLIGHT_SETTINGS": {
                    "type": "enum_member"
                },
                "PUSH_DISABLED": {
                    "type": "enum_member"
                },
                "DATA_EXIST": {
                    "type": "enum_member"
                },
                "SESSION_CLOSING": {
                    "type": "enum_member"
                },
                "HTTP_HEADER": {
                    "type": "enum_member"
                },
                "HTTP_MESSAGING": {
                    "type": "enum_member"
                },
                "REFUSED_STREAM": {
                    "type": "enum_member"
                },
                "INTERNAL": {
                    "type": "enum_member"
                },
                "CANCEL": {
                    "type": "enum_member"
                },
                "FATAL": {
                    "type": "enum_member"
                },
                "NOMEM": {
                    "type": "enum_member"
                },
                "CALLBACK_FAILURE": {
                    "type": "enum_member"
                },
                "BAD_CLIENT_MAGIC": {
                    "type": "enum_member"
                },
                "FLOODED": {
                    "type": "enum_member"
                }
            }
        },
        "SH2LIB_NV_FLAG": {
            "members": {
                "NONE": {
                    "type": "enum_member"
                },
                "NO_INDEX": {
                    "type": "enum_member"
                },
                "NO_COPY_NAME": {
                    "type": "enum_member"
                },
                "NO_COPY_VALUE": {
                    "type": "enum_member"
                }
            }
        },
        "SH2LIB_DATA_FLAG": {
            "members": {
                "NONE": {
                    "type": "enum_member"
                },
                "EOF": {
                    "type": "enum_member"
                },
                "NO_END_STREAM": {
                    "type": "enum_member"
                },
                "NO_COPY": {
                    "type": "enum_member"
                }
            }
        },
        "SH2LIB_DATA_RECV": {
            "members": {
                "NONE": {
                    "type": "enum_member"
                },
                "RST_STREAM": {
                    "type": "enum_member"
                },
                "FRAME_COMPLETE": {
                    "type": "enum_member"
                }
            }
        }
    },
    "structs": [
        "C_Pointer",
        "_lv_mp_int_wrapper",
        "_lv_mp_char_ptr_wrapper",
        "ip_addr_t",
        "ip_addr_u_addr_t",
        "ip6_addr_t",
        "ip4_addr_t",
        "esp_ip_addr_t",
        "esp_ip_addr_u_addr_t",
        "esp_ip6_addr_t",
        "esp_ip4_addr_t",
        "eth_phy_config_t",
        "esp_http_client_config_t",
        "esp_http_client_event_t",
        "spi_transaction_ext_t",
        "spi_transaction_t",
        "gpio_config_t",
        "multi_heap_info_t",
        "adc_digi_init_config_t",
        "adc_digi_configuration_t",
        "adc_digi_pattern_config_t",
        "pcnt_config_t",
        "esp_eth_mediator_t",
        "eth_mac_config_t",
        "eth_mac_clock_config_t",
        "eth_mac_clock_config_mii_t",
        "eth_mac_clock_config_rmii_t",
        "esp_eth_config_t",
        "esp_eth_mac_t",
        "esp_eth_phy_t",
        "esp_chip_info_t",
        "netif",
        "wifi_sta_list_t",
        "wifi_sta_info_t",
        "esp_netif_t",
        "esp_netif_config_t",
        "esp_netif_inherent_config_t",
        "esp_netif_ip_info_t",
        "esp_netif_driver_ifconfig_t",
        "esp_netif_netstack_config_t",
        "mdns_search_once_t",
        "mdns_result_t",
        "mdns_txt_item_t",
        "mdns_ip_addr_t",
        "http_parser",
        "http_parser_settings",
        "http_parser_url",
        "sh2lib_handle",
        "nghttp2_session",
        "esp_tls",
        "esp_tls_cfg",
        "esp_netif_dns_info_t",
        "sh2lib_nv",
        "spi_bus_config_t",
        "spi_device_interface_config_t",
        "i2s_pin_config_t",
        "i2s_pdm_tx_upsample_cfg_t",
        "esp_netif_sta_list_t",
        "esp_netif_sta_info_t",
        "tcpip_adapter_ip_info_t"
    ],
    "blobs": [
        "esp_log_default_level",
        "WIFI_EVENT",
        "IP_EVENT",
        "ETH_EVENT",
        "ip_addr_any_type",
        "ip_addr_any",
        "ip_addr_broadcast",
        "ip6_addr_any",
        "_nesting"
    ],
    "int_constants": [
        "SPI_HOST",
        "HSPI_HOST",
        "VSPI_HOST",
        "SPI1_HOST",
        "SPI2_HOST",
        "SPI3_HOST",
        "portMAX_DELAY",
        "I2S_PIN_NO_CHANGE"
    ]
}